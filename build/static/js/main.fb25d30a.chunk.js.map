{"version":3,"sources":["components/Navigation/TopNav.js","history.js","store/user.js","store/tasks.js","store/singletask.js","store/allGroups.js","store/singleGroup.js","store/point.js","store/index.js","components/Navigation/SideNav.js","components/UserHome/UserHome.js","components/AllHome/HomePage.js","components/User/AuthForm.js","components/User/Account.js","components/User/AccountSettings.js","components/Tasks/CreateTaskModal.js","components/Tasks/UpdateTaskModal.js","components/Tasks/TaskList.js","components/Groups/GroupTaskModal.js","components/Groups/GroupTasks.js","components/ShoppingList/ShoppingModal.js","components/ShoppingList/ShoppingList.js","components/Groups/GroupShoppingModal.js","components/Groups/GroupShoppingList.js","components/Groups/GroupList.js","components/Groups/CreateGroup.js","components/Groups/SingleGroup.js","components/Groups/GroupRewards.js","components/DataVis/MyStats.js","routes.js","App.js","index.js"],"names":["TopNav","toggleSideNav","sideNavOpen","className","id","onClick","icon","faTimes","faBars","to","faHome","faCheck","faShoppingBasket","faCalendar","faCog","history","createBrowserHistory","GET_USER","REMOVE_USER","ADD_USER","UPDATE_USER","defaultUser","getUser","user","type","updateUser","me","dispatch","a","axios","get","res","data","console","error","auth","email","password","method","firstName","lastName","avatarUrl","post","name","push","dispatchOrHistoryErr","GET_TASKS","ADD_TASK","DELETE_TASK","GET_SHOPPING_ITEMS","ADD_SHOPPING_ITEM","UPDATE_TASK","initialState","getTasks","tasks","addTask","task","deleteTask","taskId","getShoppingItems","addShoppingItem","updateTask","fetchTasksThunk","log","removeTaskThunk","delete","fetchShoppingItemsThunk","GET_TASK","UPDATE_TASK_COMPLETE","updateTaskComplete","isCompleted","updateTaskCompletion","patch","updatedFields","GET_GROUPS","ADD_GROUP","DELETE_GROUP","GET_GROUP_USERS","getGroups","groups","addGroup","group","deleteGroup","groupId","fetchGroupsThunk","SET_SINGLE_GROUP","ADD_GROUP_TASK","setSingleGroup","addGroupTask","fetchSingleGroup","fetchSingleGroupShopping","updateGroupThunk","put","singleGroupReducer","state","action","GET_USER_POINTS","GET_GROUP_POINTS","GET_USERGROUP_POINTS","ADD_COMPLETED_POINTS","DELETE_POINTS","fetchGroupPoints","addCompletedPoints","pointEntry","deletePoints","postCompletedPointsThunk","removeCompletedPointsThunk","reducer","combineReducers","singleTask","map","singleGroup","points","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","store","createStore","SideNav","props","this","fetchGroups","handleClick","src","length","key","style","backgroundColor","color","imageUrl","href","React","Component","connect","userId","UserHome","HomePage","backgroundImage","AuthForm","selected","displayName","handleSubmit","images","image","setState","value","onSubmit","htmlFor","faUserCircle","placeholder","required","faEnvelope","faKey","faArrowLeft","faArrowRight","readOnly","response","mapDispatch","evt","preventDefault","formName","target","Login","withRouter","Signup","AccountSettings","formStatus","toggleFormStatus","bind","loadInitialData","oldPassword","newPassword","updatePassword","defaultValue","document","getElementById","handlePassword","updateUserThunk","updateData","updatePasswordThunk","CreateTaskModal","onClose","e","description","handleChange","event","alert","fetchTasks","categories","show","children","onChange","rows","category","disabled","newTask","addTaskThunk","UpdateTaskModal","showTask","selectedTask","updatedTask","updateTaskThunk","TaskList","showModal","showTaskModal","postAwardedPoints","removePoints","userTasks","toggleCompleted","faCheckCircle","handleDelete","faPlusSquare","GroupTaskModal","fetchGroup","users","newGroupTask","addGroupTaskThunk","updateSingleTask","GroupTaskList","match","params","Task_Group","fetchSingleGroupTasks","ShoppingModal","addItem","fetchItems","deleteItem","addShoppingItemThunk","ShoppingList","GroupShoppingModal","addGroupItemThunk","GroupShoppingList","GroupList","removeGroupThunk","updateGroup","CreateGroup","redirectTo","pathname","newGroup","addGroupThunk","SingleGroup","addUser","User_Group","role","newUser","addToGroupThunk","GroupRewards","fetchUserPoints","filter","reduce","accum","point","pointCalc","userPoints","fetchUserPointsThunk","fetchGroupPointsThunk","fetchUserGroupPoints","userGroupPoints","fetchUserGroupPointsThunk","MyStats","domainPadding","theme","VictoryTheme","material","tickValues","dependentAxis","tickFormat","x","y","Routes","isLoggedIn","path","component","exact","Account","AppCalendar","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.fb25d30a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./topnav.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheck,\n  faHome,\n  faBars,\n  faShoppingBasket,\n  faCog,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faCalendar } from \"@fortawesome/free-regular-svg-icons\";\n\nconst TopNav = ({ toggleSideNav, sideNavOpen }) => {\n  return (\n    <div className=\"topnav-wrapper\">\n      <div id=\"left-nav-links\">\n        <div id=\"each-top-nav-link-open\" onClick={toggleSideNav}>\n          <div className=\"top-nav-icon-bar\">\n            {sideNavOpen ? (\n              <FontAwesomeIcon icon={faTimes} />\n            ) : (\n              <FontAwesomeIcon icon={faBars} />\n            )}\n          </div>\n        </div>\n        <div id=\"each-top-nav-link\">\n          <Link to=\"/home\">\n            <div className=\"top-nav-icon\">\n              <FontAwesomeIcon icon={faHome} />\n            </div>\n          </Link>\n        </div>\n        <div id=\"each-top-nav-link\">\n          <Link to=\"/tasks\">\n            <div className=\"top-nav-icon\">\n              <FontAwesomeIcon icon={faCheck} />\n            </div>\n          </Link>\n        </div>\n        <div id=\"each-top-nav-link\">\n          <Link to=\"/shoppinglist\">\n            <div className=\"top-nav-icon\">\n              <FontAwesomeIcon icon={faShoppingBasket} />\n            </div>\n          </Link>\n        </div>\n      </div>\n\n      <div id=\"right-nav-links\">\n        <div id=\"each-top-nav-link\">\n          <Link to=\"/calendar\">\n            <div className=\"top-nav-icon\">\n              <FontAwesomeIcon icon={faCalendar} />\n            </div>\n          </Link>\n        </div>\n\n        <div id=\"each-top-nav-link\">\n          <Link to=\"/account\">\n            <div className=\"top-nav-icon\">\n              <FontAwesomeIcon icon={faCog} />\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TopNav;\n","import {createMemoryHistory, createBrowserHistory} from 'history'\n\nconst history =\n  process.env.NODE_ENV === 'test'\n    ? createMemoryHistory()\n    : createBrowserHistory()\n\nexport default history\n","import axios from \"axios\";\nimport history from \"../history\";\n\n/**\n * ACTION TYPES\n */\nconst GET_USER = \"GET_USER\";\nconst REMOVE_USER = \"REMOVE_USER\";\nconst ADD_USER = \"ADD_USER\";\nconst UPDATE_USER = \"UPDATE_USER\";\nconst UPDATE_PASSWORD = \"UPDATE_PASSWORD\";\n\n/**\n * INITIAL STATE\n */\nconst defaultUser = {};\n\n/**\n * ACTION CREATORS\n */\nconst getUser = (user) => ({ type: GET_USER, user });\nconst removeUser = () => ({ type: REMOVE_USER });\nconst addUser = (user) => ({ type: ADD_USER, user });\nconst updateUser = (user) => ({ type: UPDATE_USER, user });\nconst updatePassword = (user) => ({ type: UPDATE_PASSWORD, user });\n/**\n * THUNK CREATORS\n */\nexport const me = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/auth/me\");\n    dispatch(getUser(res.data || defaultUser));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const auth = (email, password, method, firstName, lastName, avatarUrl) => async (\n  dispatch\n) => {\n  let res;\n  try {\n    res = await axios.post(`/auth/${method}`, {\n      email,\n      password,\n      name,\n      firstName,\n      lastName,\n      avatarUrl\n    });\n    history.push(\"/home\");\n  } catch (authError) {\n    return dispatch(getUser({ error: authError }));\n  }\n  try {\n    dispatch(getUser(res.data));\n    history.push(\"/home\");\n  } catch (dispatchOrHistoryErr) {\n    console.error(dispatchOrHistoryErr);\n  }\n};\n\nexport const fetchUserThunk = (userId) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(`/api/users/${userId}`);\n      dispatch(getUser(data));\n    } catch (error) {\n      console.log(\"error editing user info\");\n    }\n  };\n};\n\nexport const updateUserThunk = (userId, firstName, lastName, email, avatarUrl) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.put(`/api/users/${userId}`, {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        avatarUrl\n      });\n\n      dispatch(updateUser(data));\n    } catch (error) {\n      console.log(\"error editing user info\");\n    }\n  };\n};\n\nexport const updateUserPoints = (userId, firstName, lastName, email) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.put(`/api/users/${userId}`, {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n      });\n\n      dispatch(updateUser(data));\n    } catch (error) {\n      console.log(\"error editing user info\");\n    }\n  };\n};\n\nexport const updatePasswordThunk = (userId, oldPassword, newPassword) => async (\n  dispatch\n) => {\n  try {\n    const { updateData } = await axios.put(`/api/users/${userId}`, {\n      password: newPassword,\n    });\n    dispatch(updatePassword(updateData));\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const logout = () => async (dispatch) => {\n  try {\n    await axios.post(\"/auth/logout\");\n    dispatch(removeUser());\n    history.push(\"/login\");\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n/**\n * REDUCER\n */\nexport default function (state = defaultUser, action) {\n  switch (action.type) {\n    case GET_USER:\n      return action.user;\n    case REMOVE_USER:\n      return defaultUser;\n    case ADD_USER:\n      return [...state, action.user];\n    case UPDATE_USER:\n      return action.user;\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\n\n/**\n * ACTION TYPES\n */\nconst GET_TASKS = \"GET_TASKS\";\nconst ADD_TASK = \"ADD_TASK\";\nconst DELETE_TASK = \"DELETE_TASK\";\nconst GET_SHOPPING_ITEMS = \"GET_SHOPPING_ITEMS\";\nconst ADD_SHOPPING_ITEM = 'ADD_SHOPPING_ITEM'\nconst UPDATE_TASK = 'UPDATE_TASK'\n\n/**\n * INITIAL STATE\n */\n\nconst initialState = {};\n\n/**\n * ACTION CREATORS\n */\n\nconst getTasks = (tasks) => ({ type: GET_TASKS, tasks });\nconst addTask = (task) => ({ type: ADD_TASK, task });\nconst deleteTask = (taskId) => ({ type: DELETE_TASK, taskId });\nconst getShoppingItems = (tasks) => ({ type: GET_SHOPPING_ITEMS, tasks});\nconst addShoppingItem = (task) => ({ type: ADD_SHOPPING_ITEM, task });\nconst updateTask = task => ({ type: UPDATE_TASK, task })\n\n\n/**\n * THUNK CREATORS\n */\n\nexport const fetchTasksThunk = () => async (dispatch) => {\n  try {\n    const { data: tasks } = await axios.get(`/api/tasks`);\n    dispatch(getTasks(tasks));\n  } catch (error) {\n    console.log(\"error fetching tasks\");\n  }\n};\n\nexport const addTaskThunk = (task) => async (dispatch) => {\n  try {\n    const { data: newTask } = await axios.post(\"/api/tasks\", task);\n    dispatch(addTask(newTask));\n  } catch (error) {\n    console.error(\"Error adding task!\");\n    console.error(error);\n  }\n};\n\nexport const removeTaskThunk = (taskId) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/tasks/${taskId}`);\n    dispatch(deleteTask(taskId));\n  } catch (error) {\n    console.error(\"Error deleting task!\");\n    console.error(error);\n  }\n};\n\nexport const fetchShoppingItemsThunk = () => async (dispatch) => {\n  try {\n    const { data: tasks } = await axios.get(`/api/tasks/shopping`);\n    dispatch(getShoppingItems(tasks));\n  } catch (error) {\n    console.log(\"error fetching tasks\");\n  }\n};\n\nexport const addShoppingItemThunk = (task) => async (dispatch) => {\n  try {\n    const { data: newTask } = await axios.post(\"/api/tasks/shopping\", task);\n    dispatch(addShoppingItem(newTask));\n  } catch (error) {\n    console.error(\"Error adding task!\");\n    console.error(error);\n  }\n};\n\n\nexport const updateTaskThunk = (task) => async (dispatch) => {\n  try {\n    const { data: updatedTask } = await axios.put(`/api/tasks/`, task)\n    dispatch(updateTask(updatedTask))\n  } catch (error) {\n    console.error('Error updating task!')\n    console.error(error)\n  }\n}\n\n\nexport default function tasksReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_TASKS:\n      return action.tasks;\n    case GET_SHOPPING_ITEMS:\n      return action.tasks;\n    case ADD_TASK:\n      return { ...state, ...action.task };\n    case ADD_SHOPPING_ITEM:\n        return { ...state, ...action.task };\n    case DELETE_TASK:\n      return { ...state };\n      return {...state}\n    case UPDATE_TASK:\n      return {...state, tasks: state.tasks.map((task) => {\n        if (task.id === action.task.id) return action.task\n        else return task\n      })}\n    default:\n      return state;\n  }\n}\n","import axios from 'axios'\n\n// intialState\nconst initialState = {}\n\n// action constants\nconst GET_TASK = 'GET_TASK'\nconst UPDATE_TASK = 'UPDATE_TASK'\nconst UPDATE_TASK_COMPLETE = 'UPDATE_TASK_COMPLETE'\n\nconst getTask = task => ({ type: GET_SINGLE_TASK, task })\nconst updateTask = task => ({ type: UPDATE_TASK, task })\nconst updateTaskComplete = (taskId, isCompleted) => ({\n  type: UPDATE_TASK_COMPLETE,\n  taskId,\n  isCompleted\n})\n\n// thunk creators\nexport const fetchTaskThunk = (taskId) => async (dispatch) => {\n  try {\n    const { data: users } = await axios.get(`/api/tasks`);\n\n    const tasks = users.tasks\n    const task = tasks.filter((task) => task.id === taskId)\n    console.log('SINGLE TASK NEEDED', task)\n\n    dispatch(getTask(task));\n  } catch (error) {\n    console.log(\"error fetching task\");\n  }\n};\n\n\nexport const updateSingleTask = taskId => async dispatch => {\n  try {\n    const { data: updatedTask } = await axios.put(`/api/tasks/${taskId}`)\n    dispatch(updateTask(updatedTask))\n  } catch (error) {\n    console.error('Error updating task!')\n    console.error(error)\n  }\n}\n\nexport const updateTaskCompletion = (taskId, isCompleted) => async dispatch => {\n  try {\n await axios.patch(`/api/tasks/${taskId}`, {\n      updatedFields: { isCompleted },})\n      dispatch(updateTaskComplete(taskId, isCompleted))\n  } catch (error) {\n    console.error('Error updating task!')\n    console.error(error)\n  }\n}\n\n\nexport default function singleTaskReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_TASK:\n      return action.task\n    case UPDATE_TASK:\n      return {...state, ...action.task}\n    case UPDATE_TASK_COMPLETE:\n      return {...state, ...action.task}\n    default:\n      return state\n  }\n}\n","import axios from \"axios\";\n\n/**\n * ACTION TYPES\n */\n\nconst GET_GROUPS = \"GET_GROUPS\";\nconst ADD_GROUP = \"ADD_GROUP\";\nconst DELETE_GROUP = \"DELETE_GROUP\";\nconst GET_GROUP_USERS = \"GET_GROUP_USERS\"\n\n\n/**\n * INITIAL STATE\n */\n\nconst initialState = [];\n\n/**\n * ACTION CREATORS\n */\nconst getGroups = (groups) => ({ type: GET_GROUPS, groups });\nconst addGroup = (group) => ({ type: ADD_GROUP, group });\nconst deleteGroup = (groupId) => ({ type: DELETE_GROUP, groupId });\nconst setGroupUsers = (groups) => ({ type: GET_GROUP_USERS, groups})\n\n\n/**\n * THUNK CREATORS\n */\n\nexport const fetchGroupsThunk = () => async (dispatch) => {\n  try {\n    const { data: groups } = await axios.get(`/api/groups`);\n    dispatch(getGroups(groups));\n  } catch (error) {\n    console.log(\"error fetching groups\");\n  }\n};\n\nexport const fetchGroupUsersThunk = (groupId) => {\n  return async (dispatch) => {\n    try {\n      const { data: groups } = await axios.get(`/api/groups/${groupId}/tasks/add`);\n      dispatch(setGroupUsers(groups));\n    } catch (err) {\n      console.error(\"There was a problem fetching this group!\");\n      console.error(err);\n    }\n  };\n};\n\nexport const addGroupThunk = (group) => async (dispatch) => {\n  try {\n    const { data: newGroup } = await axios.post(\"/api/groups\", group);\n    dispatch(addGroup(newGroup));\n  } catch (error) {\n    console.error(\"Error adding group!\");\n    console.error(error);\n  }\n};\n\nexport const removeGroupThunk = (groupId) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/groups/${groupId}`);\n    dispatch(deleteGroup(groupId));\n  } catch (error) {\n    console.error(\"Error deleting group!\");\n    console.error(error);\n  }\n};\n\nexport default function groupsReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_GROUPS:\n      return action.groups;\n    case ADD_GROUP:\n      return [...state, action.group];\n    case DELETE_GROUP:\n      return [...state];\n    case GET_GROUP_USERS:\n      return action.groups\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\n\n//ACTIONS\nconst SET_SINGLE_GROUP = \"SET_SINGLE_GROUP\";\nconst ADD_GROUP_TASK = \"ADD_GROUP_TASK\";\n\n//ACTION CREATORS\n\nexport const setSingleGroup = (group) => {\n  return {\n    type: SET_SINGLE_GROUP,\n    group,\n  };\n};\n\nconst addGroupTask = (task) => ({type: ADD_GROUP_TASK, task})\n\n\n//THUNK CREATORS\n\nexport const fetchSingleGroup = (groupId) => {\n  return async (dispatch) => {\n    try {\n      const { data: group } = await axios.get(`/api/groups/${groupId}`);\n      dispatch(setSingleGroup(group));\n    } catch (err) {\n      console.error(\"There was a problem fetching this group!\");\n      console.error(err);\n    }\n  };\n};\n\nexport const fetchSingleGroupTasks = (groupId) => {\n  return async (dispatch) => {\n    try {\n      const { data: group } = await axios.get(`/api/groups/${groupId}/tasks`);\n      dispatch(setSingleGroup(group));\n    } catch (err) {\n      console.error(\"There was a problem fetching this group!\");\n      console.error(err);\n    }\n  };\n};\n\nexport const fetchSingleGroupShopping = (groupId) => {\n  return async (dispatch) => {\n    try {\n      const { data: group } = await axios.get(`/api/groups/${groupId}/shopping`);\n      dispatch(setSingleGroup(group));\n    } catch (err) {\n      console.error(\"There was a problem fetching this group!\");\n      console.error(err);\n    }\n  };\n};\n\n//update group info\nexport const updateGroupThunk = (group) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.put(`/api/groups/${groupId}`, group);\n      dispatch(setSingleGroup(data));\n    } catch (error) {\n      console.log(\"error updating group\");\n    }\n  };\n};\n\n// add user to group\nexport const addToGroupThunk = (groupId, userId) => {\n  return async (dispatch) => {\n    try {\n      const { data: newUser } = await axios.post(\n        `/api/groups/${groupId}`, {\n          userId\n        }\n      );\n      dispatch(setSingleGroup(newUser));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\n//remove user from group\nexport const deleteFromGroupThunk = (groupId, userId) => {\n  return async (dispatch) => {\n    try {\n      const { data: deletedUser } = await axios.delete(\n        `/api/groups/${groupId}`, {\n          userId\n        }\n      );\n      dispatch(setSingleGroup(deletedUser));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\n// add task to group\nexport const addGroupTaskThunk = (groupId, task) => async (dispatch) => {\n  try {\n    const { data: newGroupTask } = await axios.post(`/api/groups/${groupId}/tasks`, task);\n    dispatch(addGroupTask(newGroupTask));\n  } catch (error) {\n    console.error(\"Error adding task!\");\n    console.error(error);\n  }\n};\n\nexport const addGroupItemThunk = (groupId, task) => async (dispatch) => {\n  try {\n    const { data: newGroupTask } = await axios.post(`/api/groups/${groupId}/shopping`, task);\n    dispatch(addGroupTask(newGroupTask));\n  } catch (error) {\n    console.error(\"Error adding shopping item!\");\n    console.error(error);\n  }\n};\n\n\n//INITIAL STATE\nconst initialState = {};\n\n//REDUCER\n\nconst singleGroupReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SINGLE_GROUP:\n      return action.group;\n    case ADD_GROUP_TASK:\n      return {...state, ...action.task}\n    default:\n      return state;\n  }\n};\n\nexport default singleGroupReducer;\n","import axios from \"axios\";\n\nconst GET_USER_POINTS = \"GET_USER_POINTS\";\nconst GET_GROUP_POINTS = \"GET_GROUP_POINTS\";\nconst GET_USERGROUP_POINTS = \"GET_USERGROUP_POINTS\";\nconst ADD_COMPLETED_POINTS = \"ADD_COMPLETED_POINTS\";\nconst DELETE_POINTS = \"DELETE_POINTS\";\n\nconst fetchUserPoints = (points) => ({\n  type: GET_USER_POINTS,\n  points,\n});\nconst fetchGroupPoints = (group) => ({\n  type: GET_GROUP_POINTS,\n  group,\n});\nconst fetchUserGroupPoints = (points) => ({\n  type: GET_USERGROUP_POINTS,\n  points,\n});\nconst addCompletedPoints = (pointEntry) => ({\n  type: ADD_COMPLETED_POINTS,\n  pointEntry,\n});\n\nconst deletePoints = (pointEntry) => ({\n  type: DELETE_POINTS,\n  pointEntry,\n});\n\nexport const fetchUserPointsThunk = (userId) => {\n  return async (dispatch) => {\n    try {\n      const { data: userPoints } = await axios.get(`/api/points/${userId}`);\n      dispatch(fetchUserPoints(userPoints));\n    } catch (error) {\n      console.error(\"there was an error fetching your points\");\n    }\n  };\n};\n\n//GET api/groups/:groupId/rewards\nexport const fetchGroupPointsThunk = (groupId) => {\n  return async (dispatch) => {\n    try {\n      const { data: group } = await axios.get(\n        `/api/groups/${groupId}/rewards`);\n      console.log('GROUP OBJ W DATA\"', group)\n      dispatch(fetchGroupPoints(group));\n    } catch (error) {\n      console.error(\"there was an error fetching group points!\");\n    }\n  };\n};\n\n//GET api/groups/:groupId/:userId/rewards\nexport const fetchUserGroupPointsThunk = (userId, groupId) => {\n  return async (dispatch) => {\n    try {\n      const userGroupPoints = await axios.get(\n        `/api/groups/${groupId}/${userId}/rewards`\n      );\n      dispatch(fetchUserGroupPoints(userGroupPoints));\n    } catch (error) {\n      console.error(\"there was an error fetching group points for this user\");\n    }\n  };\n};\n\nexport const postCompletedPointsThunk = (taskId) => {\n  console.log(\"INSIDE POINTS COMPLETE THUNK!\");\n  return async (dispatch) => {\n    try {\n      const { data: pointEntry } = await axios.post(`/api/points/`, taskId);\n      dispatch(addCompletedPoints(pointEntry));\n    } catch (err) {\n      console.error(\"There was a problem adding points!\");\n      console.error(err);\n    }\n  };\n};\n\nexport const removeCompletedPointsThunk = (taskId) => {\n  console.log(\"INSIDE POINTS COMPLETE THUNK!\");\n  return async (dispatch) => {\n    try {\n      const { data: pointEntry } = await axios.delete(`/api/points/${taskId}`);\n      dispatch(deletePoints(pointEntry));\n    } catch (err) {\n      console.error(\"There was a problem deleting points!\");\n      console.error(err);\n    }\n  };\n};\n\nconst initialState = {};\n\nexport default function pointsReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_COMPLETED_POINTS:\n      return action.pointEntry;\n    case DELETE_POINTS:\n      return action.pointEntry;\n    case GET_USER_POINTS:\n      return action.points\n    case GET_GROUP_POINTS:\n      return action.group;\n    case GET_USERGROUP_POINTS:\n      return action.points;\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport user from \"./user\";\nimport tasks from \"./tasks\";\nimport singleTask from \"./singletask\";\nimport groups from \"./allGroups\";\nimport singleGroup from \"./singleGroup\";\nimport points from \"./point\";\n\n\nconst reducer = combineReducers({\n  user,\n  singleTask,\n  tasks,\n  groups,\n  singleGroup,\n  points\n});\n\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunkMiddleware, createLogger({ collapsed: true }))\n);\nconst store = createStore(reducer, middleware);\n\nexport default store;\nexport * from \"./user\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../../store\";\nimport PropTypes from \"prop-types\";\nimport { fetchGroupsThunk } from \"../../store/allGroups\";\nimport \"./sidenav.css\";\n\nclass SideNav extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.fetchGroups(this.props.user.id);\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteGroup(id);\n      this.props.fetchGroups();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  render() {\n    let { groups, user, handleClick, toggleSideNav } = this.props;\n    return (\n      <div className=\"side-nav-wrapper\">\n        <div id=\"nav-user-wrap\">\n          <div id=\"user-nav\">\n            <Link to=\"/account\" onClick={toggleSideNav}>\n              <img src={user.avatarUrl} id=\"user-icon\"></img>{\" \"}\n            </Link>\n            {user.firstName}\n          </div>\n\n          <h4 className=\"nav-tool-title\">My Groups</h4>\n          {!groups.length ? (\n            \"You are not a part of any groups.\"\n          ) : (\n            <div id=\"nav-group\">\n              {groups.map((group) => (\n                <div\n                  key={group.id}\n                  id=\"each-nav-group\"\n                  style={{ backgroundColor: group.color }}\n                >\n                  <Link to={`/groups/${group.id}`} onClick={toggleSideNav}>\n                    <img src={group.imageUrl} className=\"nav-group-icon\"></img>\n                    <div id=\"nav-group-name\">{group.name}</div>\n                  </Link>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        <div className=\"nav-user-links-wrap\">\n          <div className=\"nav-user-links a\">\n            <Link to=\"/groups\" onClick={toggleSideNav}>\n              Group Settings\n            </Link>\n          </div>\n          <div className=\"nav-user-links b\">\n            <a href=\"#\" onClick={handleClick}>\n              logout\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  groups: state.groups,\n  user: state.user,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroups: (userId) => dispatch(fetchGroupsThunk(userId)),\n  handleClick: () => dispatch(logout()),\n});\n\nexport default connect(mapState, mapDispatch)(SideNav);\n\nSideNav.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./UserHome.css\";\n// import moment from \"moment\";\n\n\nclass UserHome extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { firstName } = this.props;\n    // const now = new Date();\n    // const currHour = moment().format(\"HH\");\n\n    return (\n      <div className=\"userhome-wrapper\">\n        {/* {moment(now).format(\"h:mm a\")}\n        <div id=\"home-top\">\n          <div id=\"user-greet\">\n            {(() => {\n              if (currHour >= 3 && currHour < 12) {\n                return <h3>Good morning, {firstName}.</h3>;\n              } else if (currHour >= 12 && currHour <= 18) {\n                return <h3>Good afternoon, {firstName}.</h3>;\n              } else if (currHour >= 18 && currHour < 24) {\n                return <h3>Good evening, {firstName}.</h3>;\n              } else if (currHour >= 1 && currHour < 3) {\n                return <h3>Good evening, {firstName}.</h3>;\n              } else {\n                return <h3>Hello, {firstName}.</h3>;\n              }\n            })()} */}\n            hello world\n          </div>\n      //   </div>\n      // </div>\n    );\n  }\n}\nconst mapState = (state) => {\n  return {\n    firstName: state.user.firstName\n  };\n};\n\n\nexport default connect(mapState)(UserHome);\n\nUserHome.propTypes = {\n  firstName: PropTypes.string\n};\n","import React from \"react\";\nimport \"./HomePage.css\";\nimport { Link } from \"react-router-dom\";\n\nexport const HomePage = () => {\n  return (\n    <div\n      className=\"homepage-wrap\"\n      style={{\n        backgroundImage:\n          \"url(\" + \"/assets/backgrounds/coworker-bg.png\" + \")\",\n      }}\n    >\n      <div id=\"site-home-header\">\n        <div id=\"header-wrap-home\">\n       <div id=\"navtitle\">Planningo</div>\n\n       <div id=\"links-home\">\n          <Link to=\"/login\">\n           Login / Sign Up\n          </Link>\n          </div>\n          </div>\n      </div>\n\n      <div id=\"site-home-content\">\n        <div>What is this app?</div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { auth } from \"../../store\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport \"./authform.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faEnvelope,\n  faKey,\n  faUserCircle,\n  faArrowLeft,\n  faArrowRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nclass AuthForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: \"/assets/icons/users/002-girl.png\",\n    };\n  }\n\n  render() {\n    const { name, displayName, handleSubmit, error } = this.props;\n    const array = [\n      \"001-girl\",\n      \"002-girl\",\n      \"003-man\",\n      \"004-boy\",\n      \"005-boy\",\n      \"006-boy\",\n      \"007-woman\",\n      \"008-businessman\",\n      \"009-businessman\",\n      \"013-woman\",\n      \"014-grandfather\",\n      \"015-man\",\n      \"016-hipster\",\n      \"017-man\",\n      \"018-man\",\n      \"019-man\",\n      \"020-delivery man\",\n      \"021-man\",\n      \"022-man\",\n      \"023-man\",\n      \"024-man\",\n      \"025-woman\",\n      \"026-woman\",\n      \"027-grandmother\",\n      \"028-girl\",\n      \"029-girl\",\n      \"030-woman\",\n      \"031-rockstar\",\n      \"032-businesswoman\",\n      \"033-woman\",\n      \"034-woman\",\n      \"035-woman\",\n      \"036-woman\",\n    ];\n    const images = array.map((image) => {\n      return (\n        <img\n          key={image}\n          src={`/assets/icons/users/${image}.png`}\n          className={\n            this.state.selected === `/assets/icons/users/${image}.png`\n              ? \"pick-avatar selected\"\n              : \"pick-avatar\"\n          }\n          onClick={() => {\n            this.setState({ selected: `/assets/icons/users/${image}.png` });\n          }}\n          value={image}\n        />\n      );\n    });\n\n    return (\n      <div className=\"forms\">\n        <div className=\"form-container\">\n          <div className=\"form-info\">\n            <form onSubmit={handleSubmit} name={name}>\n              <h1 id=\"authtitle\">{displayName}</h1>\n              {displayName != \"Login\" ? (\n                <div>\n                  <div className=\"form-input\">\n                    <label htmlFor=\"firstName\">\n                      <small className=\"form-names\">\n                        <div className=\"form-icon\">\n                          <FontAwesomeIcon icon={faUserCircle} />\n                        </div>\n                      </small>\n                    </label>\n                    <input\n                      className=\"info-input\"\n                      name=\"firstName\"\n                      type=\"text\"\n                      placeholder=\"First name\"\n                      required\n                    />\n                  </div>\n\n                  <div className=\"form-input\">\n                    <label htmlFor=\"lastName\">\n                      <small className=\"form-names\">\n                        <div className=\"form-icon\">\n                          <FontAwesomeIcon icon={faUserCircle} />\n                        </div>\n                      </small>\n                    </label>\n                    <input\n                      className=\"info-input\"\n                      name=\"lastName\"\n                      type=\"text\"\n                      placeholder=\"Last name\"\n                      required\n                    />\n                  </div>\n                </div>\n              ) : null}\n              <div className=\"form-input\">\n                <label htmlFor=\"email\">\n                  <small className=\"form-names\">\n                    <div className=\"form-icon\">\n                      <FontAwesomeIcon icon={faEnvelope} />\n                    </div>\n                  </small>\n                </label>\n                <input\n                  className=\"info-input\"\n                  name=\"email\"\n                  placeholder=\"Email address\"\n                  type=\"text\"\n                  required\n                />\n              </div>\n              <div className=\"form-input\">\n                <label htmlFor=\"password\">\n                  <small className=\"form-names\">\n                    <div className=\"form-icon\">\n                      <FontAwesomeIcon icon={faKey} />\n                    </div>\n                  </small>\n                </label>\n                <input\n                  className=\"info-input\"\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  required\n                />\n              </div>\n\n              {displayName != \"Login\" ? (\n                <div className=\"image-pick\">\n                  <label htmlFor=\"avatarUrl\">\n                    <div id=\"chooser-title\">\n                      <div className=\"form-icon\">\n                        <FontAwesomeIcon icon={faArrowLeft} />\n                      </div>\n                      Choose Icon\n                       <div className=\"form-icon\">\n                        <FontAwesomeIcon icon={faArrowRight} />\n                      </div>\n                    </div>\n                  </label>\n                  <div id=\"image-picker-box\">{images}</div>\n                  <input\n                    name=\"avatarUrl\"\n                    className=\"hide-url\"\n                    value={this.state.selected}\n                    readOnly={true}\n                  />\n                </div>\n              ) : null}\n\n              <div id=\"button-wrap\">\n                <button className=\"form-button\" type=\"submit\">\n                  {displayName}\n                </button>\n              </div>\n            </form>\n            <h4>\n              {error && error.response && <div> {error.response.data} </div>}\n            </h4>\n          </div>\n          <div id=\"auth-link-container\">\n            <a href=\"/auth/google\">{displayName} with Google</a>\n            <div id=\"login-or-signup\">\n              {displayName === \"Login\" ? (\n                <div>\n                  No account? <Link to=\"/signup\">Sign Up</Link>\n                </div>\n              ) : (\n                <div>\n                  Have an account? <Link to=\"/login\">Login</Link>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapLogin = (state) => {\n  return {\n    name: \"login\",\n    displayName: \"Login\",\n    error: state.user.error,\n  };\n};\n\nconst mapSignup = (state) => {\n  return {\n    name: \"signup\",\n    displayName: \"Sign Up\",\n    error: state.user.error,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    handleSubmit(evt) {\n      evt.preventDefault();\n      const formName = evt.target.name;\n\n      if (formName === \"login\") {\n        const email = evt.target.email.value;\n        const password = evt.target.password.value;\n        dispatch(auth(email, password, formName));\n      } else if (formName === \"signup\") {\n        const email = evt.target.email.value;\n        const password = evt.target.password.value;\n        const firstName = evt.target.firstName.value;\n        const lastName = evt.target.lastName.value;\n        const avatarUrl = evt.target.avatarUrl.value;\n        dispatch(\n          auth(email, password, formName, firstName, lastName, avatarUrl)\n        );\n      }\n    },\n  };\n};\n\nexport const Login = withRouter(connect(mapLogin, mapDispatch)(AuthForm));\nexport const Signup = withRouter(connect(mapSignup, mapDispatch)(AuthForm));\n\nAuthForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  displayName: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  error: PropTypes.object,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * COMPONENT\n */\nexport const Account = props => {\n  const { email } = props;\n\n  return (\n    <div>\n      <h3>My Account</h3>\n      <Link to=\"/account/settings\">Account Settings</Link>\n      <div>Edit Groups</div>\n      <div>My Stats</div>\n    </div>\n  );\n};\n\n/**\n * CONTAINER\n */\nconst mapState = state => {\n  return {\n    email: state.user.email\n  };\n};\n\nexport default connect(mapState)(Account);\n\n/**\n * PROP TYPES\n */\nAccount.propTypes = {\n  email: PropTypes.string\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { me } from \"../../store\";\nimport { updateUserThunk, updatePasswordThunk } from \"../../store/user\";\n\nclass AccountSettings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formStatus: false,\n    };\n    this.toggleFormStatus = this.toggleFormStatus.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.loadInitialData();\n  }\n  toggleFormStatus() {\n    this.setState({ formStatus: !this.state.formStatus });\n  }\n  handleSubmit(userId, firstName, lastName, email, avatarUrl) {\n    this.props.updateUser(userId, firstName, lastName, email, avatarUrl);\n  }\n  handlePassword(userId, oldPassword, newPassword) {\n    this.props.updatePassword(userId, oldPassword, newPassword);\n  }\n\n  render() {\n    const { user } = this.props;\n\n    return (\n      <div>\n        <div>\n          <h3>Personal Info:</h3>\n\n          {this.state.formStatus ? (\n            <div>\n              <button onClick={this.toggleFormStatus}>Cancel Edit</button>\n              <form id=\"edit-profile-form\">\n              <label htmlFor=\"name\"> Icon: </label>\n                <input\n                  name=\"avatarUrl\"\n                  id=\"avatarUrl\"\n                  type=\"text\"\n                  placeholder={user.avatarUrl}\n                  defaultValue={user.avatarUrl}\n                />\n                <label htmlFor=\"name\"> Name: </label>\n                <input\n                  name=\"firstName\"\n                  id=\"firstName\"\n                  type=\"text\"\n                  placeholder={user.firstName}\n                  defaultValue={user.firstName}\n                />\n                <input\n                  name=\"lastName\"\n                  id=\"lastName\"\n                  type=\"text\"\n                  placeholder={user.lastName}\n                  defaultValue={user.lastName}\n                />\n                <br />\n                <label htmlFor=\"email\"> Email: </label>\n                <input\n                  name=\"email\"\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder={user.email}\n                  defaultValue={user.email}\n                />\n                <button\n                  className=\"update-profile\"\n                  type=\"button\"\n                  onClick={() => {\n                    this.handleSubmit(\n                      user.id,\n                      document.getElementById(\"firstName\").value,\n                      document.getElementById(\"lastName\").value,\n                      document.getElementById(\"email\").value\n                    );\n                  }}\n                >\n                  Update Profile\n                </button>\n              </form>\n              <form id=\"edit-password-form\" onSubmit={this.handlePassword}>\n                <label htmlFor=\"old-password\"> Old Password: </label>\n                <input\n                  name=\"old-password\"\n                  id=\"old-password\"\n                  type=\"password\"\n                  defaultValue={user.password}\n                />\n                <label htmlFor=\"new-password\"> New Password: </label>\n                <input\n                  name=\"new-password\"\n                  id=\"new-password\"\n                  type=\"password\"\n                  defaultValue={user.password}\n                />\n                {/* <label htmlFor=\"confirm-password\"> Confirm Password: </label>\n                <input name=\"confirm-password\" type=\"password\" /> */}\n                <button\n                  className=\"update-password\"\n                  type=\"button\"\n                  onClick={() => {\n                    this.handlePassword(\n                      user.id,\n                      document.getElementById(\"old-password\").value,\n                      document.getElementById(\"new-password\").value\n                    );\n                  }}\n                >\n                  Update Password\n                </button>\n              </form>\n            </div>\n          ) : (\n            <div>\n              <button onClick={this.toggleFormStatus}>Edit</button>\n              <p>\n                Name: {user.firstName} {user.lastName}\n              </p>\n              <p>Email: {user.email} </p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    loadInitialData() {\n      dispatch(me());\n    },\n    updateUser(userId, firstName, lastName, email) {\n      dispatch(updateUserThunk(userId, firstName, lastName, email));\n    },\n    updatePassword(userId, oldPassword, newPassword) {\n      dispatch(updatePasswordThunk(userId, oldPassword, newPassword));\n    },\n  };\n};\n\nexport default connect(mapState, mapDispatch)(AccountSettings);\n\nAccountSettings.propTypes = {\n  loadInitialData: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchTasksThunk,\n  removeTaskThunk,\n  addTaskThunk,\n} from \"../../store/tasks\";\nimport \"./taskmodal.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  faArrowLeft,\n  faArrowRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nclass CreateTaskModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      selected: \"\",\n      description: \"\",\n      points: 0,\n      selected: \"\",\n      error: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      if (this.state.name == \"\" || this.state.selected == \"\") {\n        alert(\"task name OR group can't be empty!\")\n      } else {\n        await this.props.addTask(this.state);\n        await this.props.fetchTasks();\n        this.setState({\n          name: \"\",\n          selected: \"\",\n          description: \"\",\n          points: 0\n        });\n        this.props.onClose();\n      }\n    } catch (err) {\n      console.log(\"error creating task\", err);\n    }\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteTask(id);\n      this.props.fetchTasks();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  onClose = (e) => {\n    this.props.onClose && this.props.onClose(e);\n  };\n\n  render() {\n    let { groups } = this.props.tasks;\n\n   const listCategories = this.props.groups.map((group) => group.categories)\n   const categories = listCategories[0]\n   console.log('THIS PROPTS GROUP!!!', this.props.groups)\n   console.log(categories)\n\n    if (!this.props.show) {\n      return null;\n    }\n\n    return (\n      <div>\n        <div>{this.props.children}</div>\n        <div className=\"task-modal-content\">\n          <div id=\"top-taskmodal-div\">\n            <div id=\"modal-title\">NEW TASK</div>\n            <button\n              onClick={(e) => this.onClose(e)}\n              className=\"close-modal-btn\"\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div>\n\n          <div id=\"lower-taskmodal-div\">\n            <form id=\"add-task-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"name\">Task:</label>\n              <input\n                name=\"name\"\n                type=\"text\"\n                className=\"modal-input\"\n                onChange={this.handleChange}\n                value={this.state.name}\n              />\n\n              <label htmlFor=\"description\">Description:</label>\n              <textarea\n                name=\"description\"\n                type=\"text\"\n                rows=\"4\"\n                className=\"modal-input\"\n                onChange={this.handleChange}\n                value={this.state.description}\n              />\n              <label htmlFor=\"points\">Points:</label>\n              <textarea\n                name=\"points\"\n                type=\"text\"\n                className=\"modal-input\"\n                onChange={this.handleChange}\n                value={this.state.points}\n              />\n            </form>\n\n            <div id=\"task-box-categories\">\n              <h3 id=\"cat-title\">Category</h3>\n            {categories ?\n             categories.map((category)=>(\n               <div key={category.id} className=\"each-cat-wrap\">\n                <div id=\"cat-icon-wrap\"  style={{backgroundColor: category.color}}>\n                 <img src={category.imageUrl} className=\"cat-icon\"></img>\n                 </div>\n                 {category.name}\n                 </div>\n                )): 'null'}\n             </div>\n\n            <form id=\"group-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"selected\"></label>\n              <select\n                value={this.state.selected}\n                onChange={this.handleChange}\n                name=\"selected\"\n              >\n                <option value=\"\" disabled>\n                  Select Group\n                </option>\n                {groups && groups.length\n                  ? groups.map((group) => (\n                      <option key={group.id}>{group.name} </option>\n                    ))\n                  : \"There are no groups\"}\n              </select>\n              <button type=\"submit\" id=\"modal-submit-button\">Add</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  tasks: state.tasks,\n  groups: state.groups\n});\n\nconst mapDispatch = (dispatch) => ({\n  addTask: (task) => dispatch(addTaskThunk(task)),\n  fetchTasks: (userId) => dispatch(fetchTasksThunk(userId)),\n  deleteTask: (taskId) => dispatch(removeTaskThunk(taskId)),\n});\n\nexport default connect(mapState, mapDispatch)(CreateTaskModal);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateTaskThunk } from \"../../store/tasks\"\nimport {\n  fetchTasksThunk,\n} from \"../../store/tasks\";\nimport \"./taskmodal.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nclass UpdateTaskModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.task.name,\n      selected: this.props.task.selected,\n      description: this.props.task.description,\n      taskId: this.props.taskId\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      console.log(this.state.taskId)\n      if (this.state.name == \"\") {\n        alert(\"task name can't be empty!\")\n      } else {\n        await this.props.updateTask(this.state);\n        this.setState({\n          name: \"\",\n          selected: \"\",\n          description: \"\",\n        });\n        alert(`Your task was updated! Redirecting you to your tasks page..`)\n        // await this.props.fetchTasks();\n        this.props.onClose();\n      }\n    } catch (err) {\n      console.log(\"error creating task\", err);\n    }\n  }\n\n  onClose = (e) => {\n    this.props.onClose && this.props.onClose(e);\n  };\n\n  render() {\n    let { groups } = this.props.tasks;\n\n    if (!this.props.showTask || !this.props.selectedTask) {\n        return null;\n    }\n    return (\n      <div>\n        <div>{this.props.children}</div>\n        <div className=\"task-modal-content\">\n          <div id=\"top-taskmodal-div\">\n            <div id=\"modal-title\">YOUR TASK</div>\n            <button\n              onClick={(e) => this.onClose(e)}\n              className=\"close-modal-btn\"\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div>\n\n          <div id=\"lower-taskmodal-div\">\n            <form id=\"add-task-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"name\">Task:</label>\n              <input\n                name=\"name\"\n                type=\"text\"\n                className=\"modal-input\"\n                onChange={this.handleChange}\n                value={this.state.name}\n              />\n\n              <label htmlFor=\"description\">Description:</label>\n              <textarea\n                name=\"description\"\n                type=\"text\"\n                rows=\"4\"\n                className=\"modal-input\"\n                onChange={this.handleChange}\n                value={this.state.description}\n              />\n            </form>\n\n            <form id=\"group-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"selected\"></label>\n              <select\n                value={this.state.selected}\n                onChange={this.handleChange}\n                name=\"selected\"\n              >\n                <option value=\"\" disabled>\n                  Select Group\n                </option>\n                {groups && groups.length\n                  ? groups.map((group) => (\n                      <option key={group.id}>{group.name} </option>\n                    ))\n                  : \"There are no groups\"}\n              </select>\n              <button type=\"submit\" id=\"modal-submit-button\">Update</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  tasks: state.tasks,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchTasks: (userId) => dispatch(fetchTasksThunk(userId)),\n  updateTask: (task) => dispatch(updateTaskThunk(task)),\n});\n\nexport default connect(mapState, mapDispatch)(UpdateTaskModal);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport CreateTaskModal from \"./CreateTaskModal\";\nimport UpdateTaskModal from \"./UpdateTaskModal\";\n\nimport { updateTaskCompletion } from \"../../store/singletask\";\nimport { postCompletedPointsThunk, removeCompletedPointsThunk } from \"../../store/point\"\n\nimport \"./Tasks.css\";\nimport { fetchGroupsThunk } from \"../../store/allGroups\";\nimport { fetchTasksThunk, removeTaskThunk } from \"../../store/tasks\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCheckCircle } from \"@fortawesome/free-regular-svg-icons\";\n\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      showTask: false,\n    };\n    this.showModal = this.showModal.bind(this);\n    this.showTaskModal = this.showTaskModal.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchTasks();\n    this.props.fetchGroups()\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteTask(id);\n      this.props.fetchTasks();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async toggleCompleted(taskId, isCompleted) {\n    try {\n      if (isCompleted === false) {\n        await this.props.updateTaskCompletion(taskId, !isCompleted);\n        await this.props.postAwardedPoints(taskId);\n      } else {\n        await this.props.updateTaskCompletion(taskId, !isCompleted);\n        await this.props.removePoints(taskId)\n      }\n      this.props.fetchTasks();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  showModal(e) {\n    this.setState({ show: !this.state.show });\n  }\n\n\n  showTaskModal(e, taskId) {\n    this.setState({ taskId, showTask:!this.state.showTask });\n  }\n\n\n  render() {\n    let { tasks } = this.props.userTasks;\n\n    return (\n      <div className=\"task-wrapper\">\n\n        <div id=\"task-box\">\n          <div className=\"task-box-header\">My Tasks\n        </div>\n          <div className=\"task-box-body\">\n            <div id=\"task-box-categories\">Category</div>\n\n            {/* LIST OF TASKS */}\n            <div id=\"task-box-list\">\n              {tasks && tasks.length\n                ? tasks.map((task) => (\n\n                    <div key={task.id} className=\"singletask\">\n                      <a onClick={e => this.showTaskModal(e, task.id)}> {task.name}</a>\n                  \n                      <UpdateTaskModal selectedTask={task.id === this.state.taskId} task={task} onClose={e => this.showTaskModal(e)} showTask={this.state.showTask}/>\n                    \n                \n                              <button\n                        onClick={() => this.toggleCompleted(task.id, task.isCompleted)\n                        }\n\n                        className=\"group-completeTask\"\n                      >\n                        <div\n                          className={\n                            task.isCompleted\n                              ? \"check-circle complete\"\n                              : \"check-circle incomplete\"\n                          }\n                        >\n                          <FontAwesomeIcon icon={faCheckCircle} />\n                        </div>\n                      </button>\n                      <button\n                        onClick={() => this.handleDelete(task.id)}\n                        className=\"deleteTask\"\n                      >\n                        X\n                      </button>\n                    </div>\n                  ))\n                : \"You have no tasks\"}\n            </div>\n            <div id=\"just-another-layout-div\"></div>\n          </div>\n          <div id=\"add-button-div\">\n            <button\n              onClick={(e) => {\n                this.showModal(e);\n              }}\n              className=\"add-task-button\"\n            >\n              <div id=\"ahhh\">\n                <FontAwesomeIcon icon={faPlusSquare} />\n              </div>\n              Add New Task\n            </button>\n            <CreateTaskModal\n              onClose={(e) => this.showModal(e)}\n              show={this.state.show}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  userTasks: state.tasks,\n  userId: state.user.id,\n  groups: state.groups\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchTasks: () => dispatch(fetchTasksThunk()),\n  deleteTask: (taskId) => dispatch(removeTaskThunk(taskId)),\n  updateTaskCompletion: (taskId, isCompleted) =>\n  dispatch(updateTaskCompletion(taskId, isCompleted)),\n  postAwardedPoints: (taskId) => dispatch(postCompletedPointsThunk(taskId)),\n  removePoints: (taskId) => dispatch(removeCompletedPointsThunk(taskId)),\n  fetchGroups: () => dispatch(fetchGroupsThunk())\n});\n\n\nexport default connect(mapState, mapDispatch)(TaskList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchSingleGroup,\n  addGroupTaskThunk,\n} from \"../../store/singleGroup\";\nimport \"./grouptaskmodal.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nclass GroupTaskModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      selected: \"\",\n      description: \"\",\n      points: 0,\n      groupId: this.props.groupId,\n      error: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchGroup(this.props.groupId);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      await this.props.addGroupTask(this.props.groupId, this.state);\n      this.setState({\n        name: \"\",\n        selected: \"\",\n        description: \"\",\n        points: 0\n      });\n      await this.props.fetchGroup(this.props.groupId);\n      this.props.onClose();\n    } catch (err) {\n      console.log(\"error creating task\", err);\n    }\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteTask(id);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  onClose = (e) => {\n    this.props.onClose && this.props.onClose(e);\n  };\n\n  render() {\n    let group = this.props.group;\n\n    if (!this.props.show) {\n      return null;\n    }\n    return (\n      <div>\n        <div>{this.props.children}</div>\n        <div className=\"group-task-modal-content\">\n          <div id=\"group-top-taskmodal-div\">\n            <div id=\"group-modal-title\">NEW TASK</div>\n            <button\n              onClick={(e) => this.onClose(e)}\n              className=\"group-close-modal-btn\"\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div>\n\n          <div id=\"group-lower-taskmodal-div\">\n            <form id=\"group-add-task-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"name\">Task:</label>\n              <input\n                name=\"name\"\n                type=\"text\"\n                className=\"group-modal-input\"\n                onChange={this.handleChange}\n                value={this.state.name}\n              />\n\n              <label htmlFor=\"description\">Description:</label>\n              <textarea\n                name=\"description\"\n                type=\"text\"\n                rows=\"4\"\n                className=\"group-modal-input\"\n                onChange={this.handleChange}\n                value={this.state.description}\n              />\n              <label htmlFor=\"points\">Points:</label>\n              <textarea\n                name=\"points\"\n                type=\"text\"\n                className=\"modal-input\"\n                onChange={this.handleChange}\n                value={this.state.points}\n              />\n            </form>\n\n          <form id=\"user-form\" onSubmit={this.handleSubmit}>\n            <label htmlFor=\"selected\"></label>\n            <select\n              value={this.state.selected}\n              onChange={this.handleChange}\n              name=\"selected\"\n            >\n              <option value=\"\" disabled>\n                Select User\n              </option>\n              {group && group.users\n                ? group.users.map((user) => (\n                    <option key={user.id}>{user.firstName} {user.lastName}</option>\n                  ))\n                : \"There are no users\"}\n              </select>\n              <button id=\"group-modal-submit-button\" type=\"submit\">Add</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  userId: state.user.id,\n  group: state.singleGroup\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroup: (groupId) => dispatch(fetchSingleGroup(groupId)),\n  addGroupTask: (groupId, task) => dispatch(addGroupTaskThunk(groupId, task)),\n  updateTask: (task) => dispatch(updateSingleTask(task)),\n});\n\nexport default connect(mapState, mapDispatch)(GroupTaskModal);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport GroupTaskModal from \"./GroupTaskModal\";\nimport { removeTaskThunk } from \"../../store/tasks\";\nimport { updateTaskCompletion} from \"../../store/singletask\";\nimport { fetchSingleGroupTasks } from \"../../store/singleGroup\";\nimport { postCompletedPointsThunk, removeCompletedPointsThunk } from \"../../store/point\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCheckCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport \"./grouptasks.css\";\n\nclass GroupTaskList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.showModal = this.showModal.bind(this);\n\n  }\n\n  componentDidMount() {\n    this.props.fetchGroup(this.props.match.params.groupId);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteTask(id);\n      this.props.fetchGroup(this.props.match.params.groupId);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async toggleCompleted(taskId, isCompleted) {\n    try {\n      if (isCompleted === false) {\n        await this.props.updateTaskCompletion(taskId, !isCompleted);\n        await this.props.postAwardedPoints(taskId);\n      } else {\n        await this.props.updateTaskCompletion(taskId, !isCompleted);\n        await this.props.removePoints(taskId)\n      }\n      this.props.fetchGroup(this.props.match.params.groupId);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  showModal(e) {\n    this.setState({ show: !this.state.show });\n  }\n\n  render() {\n    let tasks = this.props.group.tasks;\n    let group = this.props.group;\n    let categories = this.props.group.categories;\n\n    return (\n      <div className=\"group-task-wrapper\">\n        <div id=\"group-task-box\">\n          <div className=\"group-task-box-header\">\n            Tasks -- {group.name}\n          </div>\n          <div className=\"group-task-box-body\">\n\n            <div id=\"group-task-box-categories\">\n              <h3 id=\"category-title\">Category</h3>\n              <div className=\"each-category-wrap\">\n              All\n                 </div>\n\n            {categories ?\n             categories.map((category)=>(\n               <div key={category.id} className=\"each-category-wrap\">\n              <div id=\"category-icon-wrap\"  style={{backgroundColor: category.color}}>\n                 <img src={category.imageUrl} className=\"category-icon\"></img>\n                 </div>\n                 {category.name}\n                 </div>\n             )): 'null'}\n\n            </div>\n            {/* LIST OF TASKS */}\n            <div id=\"group-task-box-list\">\n              {tasks && tasks.length\n                ? tasks.map((task) => (\n                    <div key={task.id} className=\"group-singletask\">\n                      <button\n                        onClick={() => this.toggleCompleted(task.id, task.isCompleted)\n                        }\n\n                        className=\"group-completeTask\"\n                      >\n                        <div\n                          className={\n                            task.isCompleted\n                              ? \"check-circle complete\"\n                              : \"check-circle incomplete\"\n                          }\n                        >\n                          <FontAwesomeIcon icon={faCheckCircle} />\n                        </div>\n                      </button>\n                      {task.name}\n\n                      <div>---worth {task.Task_Group.points} POINTS</div>\n\n                      <button\n                        onClick={() => this.handleDelete(task.id)}\n                        className=\"group-deleteTask\"\n                      >\n                        X\n                      </button>\n                    </div>\n                  ))\n                : \"Your group has no tasks\"}\n            </div>\n            <div id=\"group-just-another-layout-div\"></div>\n          </div>\n          <div id=\"group-add-button-div\">\n            <button\n              onClick={(e) => {\n                this.showModal(e);\n              }}\n              className=\"group-add-task-button\"\n            >\n              <div id=\"ahhh\">\n                <FontAwesomeIcon icon={faPlusSquare} />\n              </div>\n              Add New Task\n            </button>\n            <GroupTaskModal\n              groupId={this.props.match.params.groupId}\n              onClose={(e) => this.showModal(e)}\n              show={this.state.show}\n            />\n          </div>\n        </div>\n        </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  // tasks: state.tasks,\n  userId: state.user.id,\n  group: state.singleGroup,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroup: (groupId) => dispatch(fetchSingleGroupTasks(groupId)),\n  deleteTask: (taskId) => dispatch(removeTaskThunk(taskId)),\n  updateTaskCompletion: (taskId, isCompleted) =>\n    dispatch(updateTaskCompletion(taskId, isCompleted)),\n  postAwardedPoints: (taskId) => dispatch(postCompletedPointsThunk(taskId)),\n  removePoints: (taskId) => dispatch(removeCompletedPointsThunk(taskId)),\n});\n\nexport default connect(mapState, mapDispatch)(GroupTaskList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchShoppingItemsThunk,\n  addShoppingItemThunk,\n  removeTaskThunk,\n} from \"../../store/tasks\";\nimport \"./taskmodal.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nclass ShoppingModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      selected: \"\",\n      description: \"\",\n      error: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      await this.props.addItem(this.state);\n      await this.props.fetchItems();\n      this.setState({\n        name: \"\",\n        selected: \"\",\n      });\n      this.props.onClose();\n    } catch (err) {\n      console.log(\"error creating item\", err);\n    }\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteItem(id);\n      this.props.fetchItems();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  onClose = (e) => {\n    this.props.onClose && this.props.onClose(e);\n  };\n\n  render() {\n    let { groups } = this.props.tasks;\n\n    if (!this.props.show) {\n      return null;\n    }\n    return (\n      <div>\n        <div>{this.props.children}</div>\n        <div className=\"task-modal-content\">\n          <div id=\"top-taskmodal-div\">\n            <div id=\"modal-title\">NEW ITEM</div>\n            <button\n              onClick={(e) => this.onClose(e)}\n              className=\"close-modal-btn\"\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div>\n\n          <div id=\"lower-taskmodal-div\">\n            <form id=\"add-task-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"name\">Item:</label>\n              <input\n                name=\"name\"\n                type=\"text\"\n                className=\"modal-input\"\n                onChange={this.handleChange}\n                value={this.state.name}\n              />\n\n              <label htmlFor=\"description\">Description:</label>\n              <textarea\n                name=\"description\"\n                type=\"text\"\n                rows=\"4\"\n                className=\"modal-input\"\n                onChange={this.handleChange}\n                value={this.state.description}\n              />\n            </form>\n\n            <form id=\"group-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"selected\"></label>\n              <select\n                value={this.state.selected}\n                onChange={this.handleChange}\n                name=\"selected\"\n              >\n                <option value=\"\" disabled>\n                  Select Group\n                </option>\n                {groups && groups.length\n                  ? groups.map((group) => (\n                      <option key={group.id}>{group.name} </option>\n                    ))\n                  : \"There are no groups\"}\n              </select>\n              <button type=\"submit\" id=\"modal-submit-button\">Add</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  tasks: state.tasks,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchItems: (userId) => dispatch(fetchShoppingItemsThunk(userId)),\n  deleteItem: (taskId) => dispatch(removeTaskThunk(taskId)),\n  addItem: (task) => dispatch(addShoppingItemThunk(task)),\n});\n\nexport default connect(mapState, mapDispatch)(ShoppingModal);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateTaskCompletion } from \"../../store/singletask\";\nimport ShoppingModal from \"./ShoppingModal\";\nimport \"./Tasks.css\";\nimport { fetchShoppingItemsThunk, removeTaskThunk } from \"../../store/tasks\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCheckCircle } from \"@fortawesome/free-regular-svg-icons\";\n\n\nclass ShoppingList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n    this.showModal = this.showModal.bind(this);\n  }\n  componentDidMount() {\n    this.props.fetchItems();\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteItem(id);\n      this.props.fetchItems();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async toggleCompleted(taskId, isCompleted) {\n    try {\n      await this.props.updateTaskCompletion(taskId, !isCompleted);\n\n      this.props.fetchItems();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  showModal(e) {\n    this.setState({ show: !this.state.show });\n  }\n\n  render() {\n    let { tasks, groups } = this.props.tasks;\n\n    return (\n      <div className=\"task-wrapper\">\n\n        <div id=\"task-box\">\n          <div className=\"task-box-header\">Shopping List\n          {/* <select name=\"selected\">\n          <option value=\"\" disabled>\n            Select Group\n          </option>\n          {groups && groups.length\n            ? groups.map((group) => (\n                <option key={group.id}>{group.name} </option>\n              ))\n            : \"There are no groups\"}\n        </select> */}\n        </div>\n          <div className=\"task-box-body\">\n            <div id=\"task-box-categories\">Category</div>\n\n            {/* LIST OF TASKS */}\n            <div id=\"task-box-list\">\n              {tasks && tasks.length\n                ? tasks.map((task) => (\n                    <p key={task.id} className=\"singletask\">\n                              <button\n                        onClick={() => this.toggleCompleted(task.id, task.isCompleted)\n                        }\n\n                        className=\"group-completeTask\"\n                      >\n                        <div\n                          className={\n                            task.isCompleted\n                              ? \"check-circle complete\"\n                              : \"check-circle incomplete\"\n                          }\n                        >\n                          <FontAwesomeIcon icon={faCheckCircle} />\n                        </div>\n                      </button>\n                      {task.name}\n                      <button\n                        onClick={() => this.handleDelete(task.id)}\n                        className=\"deleteTask\"\n                      >\n                        X\n                      </button>\n                    </p>\n                  ))\n                : \"You have no items in your shopping list!\"}\n            </div>\n            <div id=\"just-another-layout-div\"></div>\n          </div>\n          <div id=\"add-button-div\">\n            <button\n              onClick={(e) => {\n                this.showModal(e);\n              }}\n              className=\"add-task-button\"\n            >\n              <div id=\"ahhh\">\n                <FontAwesomeIcon icon={faPlusSquare} />\n              </div>\n              Add Item\n            </button>\n            <ShoppingModal\n              onClose={(e) => this.showModal(e)}\n              show={this.state.show}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  tasks: state.tasks,\n  userId: state.user.id,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchItems: () => dispatch(fetchShoppingItemsThunk()),\n  deleteItem: (taskId) => dispatch(removeTaskThunk(taskId)),\n  updateTaskCompletion: (taskId, isCompleted) =>\n  dispatch(updateTaskCompletion(taskId, isCompleted)),});\n\nexport default connect(mapState, mapDispatch)(ShoppingList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchSingleGroupShopping,\n  addGroupItemThunk,\n} from \"../../store/singleGroup\";\nimport \"./grouptaskmodal.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nclass GroupShoppingModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      selected: \"\",\n      description: \"\",\n      groupId: this.props.groupId,\n      error: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchGroup(this.props.groupId);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      await this.props.addGroupTask(this.props.groupId, this.state);\n      this.setState({\n        name: \"\",\n        selected: \"\"\n      });\n      await this.props.fetchGroup(this.props.groupId);\n      this.props.onClose();\n    } catch (err) {\n      console.log(\"error creating task\", err);\n    }\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteTask(id);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  onClose = (e) => {\n    this.props.onClose && this.props.onClose(e);\n  };\n\n  render() {\n    let group = this.props.group;\n\n    if (!this.props.show) {\n      return null;\n    }\n    return (\n      <div>\n        <div>{this.props.children}</div>\n        <div className=\"group-task-modal-content\">\n          <div id=\"group-top-taskmodal-div\">\n            <div id=\"group-modal-title\">NEW ITEM</div>\n            <button\n              onClick={(e) => this.onClose(e)}\n              className=\"group-close-modal-btn\"\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div>\n\n          <div id=\"group-lower-taskmodal-div\">\n            <form id=\"group-add-task-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"name\">Name:</label>\n              <input\n                name=\"name\"\n                type=\"text\"\n                className=\"group-modal-input\"\n                onChange={this.handleChange}\n                value={this.state.name}\n              />\n\n              <label htmlFor=\"description\">Description:</label>\n              <textarea\n                name=\"description\"\n                type=\"text\"\n                rows=\"4\"\n                className=\"group-modal-input\"\n                onChange={this.handleChange}\n                value={this.state.description}\n              />\n              <button id=\"group-modal-submit-button\" type=\"submit\">Add</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  userId: state.user.id,\n  group: state.singleGroup\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroup: (groupId) => dispatch(fetchSingleGroupShopping(groupId)),\n  addGroupTask: (groupId, task) => dispatch(addGroupItemThunk(groupId, task)),\n  updateTask: (task) => dispatch(updateSingleTask(task)),\n});\n\nexport default connect(mapState, mapDispatch)(GroupShoppingModal);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport GroupShoppingModal from \"./GroupShoppingModal\";\nimport { removeTaskThunk } from \"../../store/tasks\";\nimport { updateTaskCompletion} from \"../../store/singletask\";\nimport { fetchSingleGroupShopping } from \"../../store/singleGroup\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCheckCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport \"./grouptasks.css\";\n\nclass GroupShoppingList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.showModal = this.showModal.bind(this);\n\n  }\n\n  componentDidMount() {\n    this.props.fetchGroup(this.props.match.params.groupId);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteTask(id);\n      this.props.fetchGroup(this.props.match.params.groupId);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async toggleCompleted(taskId, isCompleted) {\n    try {\n      await this.props.updateTaskCompletion(taskId, !isCompleted);\n\n      this.props.fetchGroup(this.props.match.params.groupId);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n\n  showModal(e) {\n    this.setState({ show: !this.state.show });\n  }\n\n  render() {\n    let tasks = this.props.group.tasks;\n    let group = this.props.group;\n    let categories = this.props.group.categories;\n\n    return (\n      <div className=\"group-task-wrapper\">\n        <div id=\"group-task-box\">\n          <div className=\"group-task-box-header\">\n            Shopping List - {group.name}\n          </div>\n          <div className=\"group-task-box-body\">\n            <div id=\"group-task-box-categories\">Category\n\n            {categories ?\n             categories.map((category)=>(\n               <div key={category.id} className=\"each-category-wrap\">\n              <div id=\"category-icon-wrap\"  style={{backgroundColor: category.color}}>\n                 <img src={category.imageUrl} className=\"category-icon\"></img>\n                 </div>\n                 {category.name}\n                 </div>\n             )): 'null'}\n</div>\n\n\n            {/* LIST OF TASKS */}\n            <div id=\"group-task-box-list\">\n              {tasks && tasks.length\n                ? tasks.map((task) => (\n                    <div key={task.id} className=\"group-singletask\">\n                      <button\n                        onClick={() => this.toggleCompleted(task.id, task.isCompleted)\n                        }\n\n                        className=\"group-completeTask\"\n                      >\n                        <div\n                          className={\n                            task.isCompleted\n                              ? \"check-circle complete\"\n                              : \"check-circle incomplete\"\n                          }\n                        >\n                          <FontAwesomeIcon icon={faCheckCircle} />\n                        </div>\n                      </button>\n                      {task.name}\n                      <button\n                        onClick={() => this.handleDelete(task.id)}\n                        className=\"group-deleteTask\"\n                      >\n                        X\n                      </button>\n                    </div>\n                  ))\n                : \"This shopping list has no items!\"}\n            </div>\n            <div id=\"group-just-another-layout-div\"></div>\n          </div>\n          <div id=\"group-add-button-div\">\n            <button\n              onClick={(e) => {\n                this.showModal(e);\n              }}\n              className=\"group-add-task-button\"\n            >\n              <div id=\"ahhh\">\n                <FontAwesomeIcon icon={faPlusSquare} />\n              </div>\n              Add Item\n            </button>\n            <GroupShoppingModal\n              groupId={this.props.match.params.groupId}\n              onClose={(e) => this.showModal(e)}\n              show={this.state.show}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  tasks: state.tasks,\n  userId: state.user.id,\n  group: state.singleGroup\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroup: (groupId) => dispatch(fetchSingleGroupShopping(groupId)),\n  deleteTask: (taskId) => dispatch(removeTaskThunk(taskId)),\n  updateTaskCompletion: (taskId, isCompleted) =>\n    dispatch(updateTaskCompletion(taskId, isCompleted)),\n});\n\nexport default connect(mapState, mapDispatch)(GroupShoppingList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateGroupThunk } from \"../../store/singleGroup\";\nimport {Link} from 'react-router-dom'\n\n\nimport {\n  fetchGroupsThunk,\n  removeGroupThunk,\n} from \"../../store/allGroups\";\n\n\nclass GroupList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    this.props.fetchGroups(this.props.match.params.userId);\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteGroup(id);\n      this.props.fetchGroups();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  render() {\n    let { groups } = this.props;\n    return (\n      <div className=\"group-wrapper\">\n        <h1 className=\"tool-title\">My Groups</h1>\n        <Link to=\"/groups/create\">Create a Group</Link>\n        {!groups.length ? 'You are not a part of any groups.' : (\n        <div id=\"group-box\">\n          {groups.map((group) => (\n            <div key={group.id} className=\"singlegroup\">\n              <Link to={`/groups/${group.id}`}>\n                <img src={group.imageUrl}></img>\n              {group.name}\n              </Link>\n              <button\n                onClick={() => this.handleDelete(group.id)}\n                className=\"deletegroup\"\n              >\n                X\n              </button>\n            </div>\n          ))}\n        </div>\n                  )}\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  groups: state.groups,\n  userId: state.user.id,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroups: (userId) => dispatch(fetchGroupsThunk(userId)),\n  deleteGroup: (groupId) => dispatch(removeGroupThunk(groupId)),\n  updateGroup: (group) => dispatch(updateGroupThunk(group)),\n});\n\nexport default connect(mapState, mapDispatch)(GroupList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {Redirect} from 'react-router-dom';\nimport { addGroupThunk } from \"../../store/allGroups\";\n\n\nclass CreateGroup extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: \"\",\n      description: \"\",\n      redirectTo: null,\n      // showError: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  //clears boxes after submit\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      await this.props.addGroup(this.state);\n      if(this.state.name === \"\"){\n        alert(\"group name can't be empty!\")\n      }\n      this.setState({\n        redirectTo: '/groups'\n      });\n      alert(`Your group \"${this.state.name}\" was created! Redirecting you to your groups page..`)\n    } catch (err) {\n      console.log(\"error creating group\", err);\n    }\n  }\n\n  render() {\n      if (this.state.redirectTo) {\n        return <Redirect to={{pathname: this.state.redirectTo}} />;\n      } else {\n        return(\n      <div className=\"group-wrapper\">\n        <h1>Create Group</h1>\n\n        <form id=\"add-group-form\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Your new group's name\"\n            onChange={this.handleChange}\n            value={this.state.name}\n          />\n          <label htmlFor=\"name\">Description:</label>\n          <input\n            name=\"description\"\n            type=\"textarea\"\n            placeholder=\"Write a description\"\n            onChange={this.handleChange}\n            value={this.state.description}\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n      </div>\n    );\n  }\n}\n}\n\nconst mapDispatch = (dispatch) => ({\n  addGroup: (group) => dispatch(addGroupThunk(group)),\n});\n\nexport default connect(null, mapDispatch)(CreateGroup);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateGroupThunk, fetchSingleGroup } from \"../../store/singleGroup\";\nimport { Link } from \"react-router-dom\";\nimport { addToGroupThunk, deleteFromGroupThunk } from \"../../store/singleGroup\";\nimport \"./singlegroup.css\"\n\nclass SingleGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchGroup(this.props.match.params.groupId);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      await this.props.addUser(this.props.group.id, this.state.userId);\n      this.props.fetchGroup(this.props.match.params.groupId);\n    } catch (err) {\n      console.log(\"handlesubmit err\", err);\n    }\n  }\n\n  render() {\n    const group = this.props.group;\n\n\n    return (\n      <div key={group.id} id=\"group-info\">\n        Edit group\n        <form id=\"addform\" onSubmit={this.handleSubmit}>\n          <h3>Add a User</h3>\n          <label htmlFor=\"userId\">id</label>\n          <input\n            name=\"userId\"\n            type=\"text\"\n            onChange={this.handleChange}\n            value={this.props.userId}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <h1 className=\"tool-title\">Group: {group.name}</h1>\n        <img src={group.imageUrl}></img>\n        <h3>Description: {group.description}</h3>\n        <ul>\n        <li><Link to={`/groups/${this.props.group.id}/tasks`}>\n          Group Tasks\n        </Link></li>\n        <li> <Link to={`/groups/${this.props.group.id}/shoppinglist`}>\n          Shopping\n        </Link></li>\n        <li><Link to={`/groups/${this.props.group.id}/rewards`}>\n          Rewards\n        </Link></li>\n        </ul>\n        Users:\n        {group.users ? (\n          <div>\n            {group.users.map((user) => (\n              <div key={user.id}>\n                <img src={user.avatarUrl} className=\"user-avatar\"/>\n                {(() => {\n                  if (user.User_Group.role === \"admin\") {\n                    return (\n                      <h3>\n                        {user.firstName} {user.lastName} 🏅\n                      </h3>\n                    );\n                  } else {\n                    return (\n                      <h3>\n                        {user.firstName} {user.lastName}\n                      </h3>\n                    );\n                  }\n                })()}\n              </div>\n            ))}\n          </div>\n        ) : (\n          \"This group has no members.\"\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  group: state.singleGroup,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroup: (group) => dispatch(fetchSingleGroup(group)),\n  updateGroup: (group) => dispatch(updateGroupThunk(group)),\n  addUser: (groupId, userId) => dispatch(addToGroupThunk(groupId, userId)),\n});\n\nexport default connect(mapState, mapDispatch)(SingleGroup);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchSingleGroup } from \"../../store/singleGroup\";\nimport {\n  fetchUserPointsThunk,\n  fetchGroupPointsThunk,\n  fetchUserGroupPointsThunk,\n} from \"../../store/point\";\nimport \"./grouprewards.css\";\n\nclass GroupRewards extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: \"\",\n      points: \"\",\n    };\n  }\n  componentDidMount() {\n    this.props.fetchGroup(this.props.match.params.groupId);\n    this.props.fetchUserPoints(this.props.userId);\n    this.props.fetchGroupPoints(this.props.match.params.groupId);\n    // this.props.fetchUserGroupPoints(\n    //   this.props.userId,\n    //   this.props.match.params.groupId\n    // );\n  }\n\n  pointCalc (points, userId) {\n    return points.filter((user) => user.userId === userId)\n      .reduce((accum, point) => {\n        return accum + point.value;\n        }, 0)\n  } \n\n  render() {\n    const group = this.props.group;\n    const points = this.props.points;\n    console.log('THIS.PROPS POINTS!!!!', this.props.points)\n\n    return (\n      <div className=\"group-reward-wrapper\">\n        <h1>Number of Points</h1>\n\n        {group.users ? (\n          <div id=\"group-reward-user-wrap\">\n            {group.users.map((user) => (\n              <div key={user.id} id=\"group-reward-user\">\n                <img src={user.avatarUrl} className=\"group-user-icon\" />\n                {user.firstName}: {points.length > 0 ? this.pointCalc(points, user.id) : 0} points\n              </div>\n            ))}\n          </div>\n        ) : (\n          \"This group has no members.\"\n        )}\n      </div>\n    );\n  }\n}\n\n\nconst mapState = (state) => ({\n  userId: state.user.id,\n  group: state.singleGroup,\n  tasks: state.tasks,\n  points: state.points,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroup: (groupId) => dispatch(fetchSingleGroup(groupId)),\n  fetchUserPoints: (userId) => dispatch(fetchUserPointsThunk(userId)),\n  fetchGroupPoints: (groupId) => dispatch(fetchGroupPointsThunk(groupId)),\n  fetchUserGroupPoints: (userId, groupId) =>\n    dispatch(fetchUserGroupPointsThunk(userId, groupId)),\n});\n\nexport default connect(mapState, mapDispatch)(GroupRewards);\n","import React from \"react\";\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from \"victory\";\n\nconst data = [\n  { task: 1, points: 130 },\n  { task: 2, points: 16 },\n  { task: 3, points: 142 },\n  { task: 4, points: 19 },\n];\n\nclass MyStats extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>My Stats</h1>\n        <VictoryChart domainPadding={10} theme={VictoryTheme.material}>\n          <VictoryAxis tickValues={[\"school\", \"work\", \"housework\", \"hobby\"]} />\n          <VictoryAxis dependentAxis tickFormat={(x) => `${x / 1}`} />\n          <VictoryBar data={data} x={\"task\"} y={\"points\"} />\n        </VictoryChart>\n      </div>\n    );\n  }\n}\n\nexport default MyStats;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Route, Switch } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  UserHome,\n  HomePage,\n  Login,\n  Signup,\n  GroupList,\n  Account,\n  AccountSettings,\n  ShoppingList,\n  AppCalendar,\n  TaskList,\n  CreateGroup,\n  SingleGroup,\n  GroupShoppingList,\n  GroupTaskList,\n  MyStats,\n  GroupRewards,\n} from \"./components\";\nimport { me } from \"./store\";\n\nclass Routes extends Component {\n  componentDidMount() {\n    this.props.loadInitialData();\n  }\n\n  render() {\n    const { isLoggedIn } = this.props;\n    return (\n      <Switch>\n        {/* Routes placed here are available to all visitors */}\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route exact path=\"/welcome\" component={HomePage} />\n        {isLoggedIn && (\n          <Switch>\n            {/* Routes placed here are only available after logging in */}\n\n            <Route exact path={[\"/home\", \"/\"]} component={UserHome} />\n            <Route exact path=\"/account\" component={Account} />\n            <Route exact path=\"/account/settings\" component={AccountSettings} />\n            <Route path=\"/calendar\" component={AppCalendar} />\n            <Route exact path=\"/tasks\" component={TaskList} />\n            <Route exact path=\"/groups\" component={GroupList} />\n            <Route path=\"/shoppinglist\" component={ShoppingList} />\n            <Route\n              exact\n              path=\"/:groupId/shoppinglist\"\n              component={GroupShoppingList}\n            />\n            <Route exact path=\"/groups/create\" component={CreateGroup} />\n            <Route exact path=\"/groups/:groupId\" component={SingleGroup} />\n            <Route\n              exact\n              path=\"/groups/:groupId/rewards\"\n              component={GroupRewards}\n            />\n\n            <Route\n              exact\n              path=\"/groups/:groupId/tasks\"\n              component={GroupTaskList}\n            />\n\n            <Route\n              path=\"/groups/:groupId/shoppinglist\"\n              component={GroupShoppingList}\n            />\n            <Route exact path=\"/mystats\" component={MyStats} />\n          </Switch>\n        )}\n        {/* Displays our Login component as a fallback */}\n        <Route component={HomePage} />\n      </Switch>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    isLoggedIn: !!state.user.id,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    loadInitialData() {\n      dispatch(me());\n    },\n  };\n};\n\n// The `withRouter` wrapper makes sure that updates are not blocked\n// when the url changes\nexport default withRouter(connect(mapState, mapDispatch)(Routes));\n\nRoutes.propTypes = {\n  loadInitialData: PropTypes.func.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n};\n","import React from \"react\";\nimport { TopNav, SideNav } from \"./components\";\nimport Routes from \"./routes\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sideNavOpen: false,\n    };\n    this.toggleSideNav = this.toggleSideNav.bind(this);\n  }\n  toggleSideNav() {\n    this.setState({ sideNavOpen: !this.state.sideNavOpen });\n  }\n  render() {\n    return (\n      <div className=\"app-wrap\">\n        {this.props.isLoggedIn ? (\n          <div id=\"topnav\">\n            <TopNav\n              toggleSideNav={this.toggleSideNav}\n              sideNavOpen={this.state.sideNavOpen}\n            />\n          </div>\n        ) : null}\n\n        <div id=\"sitebody\">\n          <div\n            className={`sidenav ${\n              this.state.sideNavOpen && this.props.isLoggedIn\n                ? \"open\"\n                : \"closed\"\n            }`}\n          >\n                    <div id=\"open-close\" onClick={this.toggleSideNav}>\n          <FontAwesomeIcon icon={faTimes} />\n        </div>\n            <SideNav\n              toggleSideNav={this.toggleSideNav}\n              sideNavOpen={this.state.sideNavOpen}\n            />\n          </div>\n          <div id=\"app-content-wrap\">\n            <Routes />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    isLoggedIn: !!state.user.id,\n  };\n};\n\nexport default connect(mapState, null)(App);\n\nApp.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport history from \"./history\";\nimport store from \"./store\";\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"app\")\n);\n\n// serviceWorkerRegistration.register();\n"],"sourceRoot":""}