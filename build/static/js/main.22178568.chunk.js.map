{"version":3,"sources":["components/Navigation/TopNav.js","history.js","store/user.js","store/tasks.js","store/singletask.js","store/allGroups.js","store/singleGroup.js","store/point.js","store/index.js","components/Navigation/SideNav.js","components/UserHome/UserHome.js","components/AllHome/HomePage.js","components/User/AuthForm.js","components/User/Account.js","components/User/AccountSettings.js","components/Tasks/Categories.js","components/Tasks/CreateTaskModal.js","components/Tasks/UpdateTaskModal.js","components/Tasks/TaskList.js","components/Groups/GroupTaskModal.js","components/Groups/UpdateGroupTask.js","components/Groups/GroupTasks.js","components/ShoppingList/ShoppingModal.js","components/ShoppingList/ShoppingList.js","components/Groups/GroupShoppingModal.js","components/Groups/GroupShoppingList.js","components/Groups/GroupList.js","components/Groups/CreateGroup.js","components/Groups/SingleGroup.js","components/Groups/GroupRewards.js","components/DataVis/MyStats.js","routes.js","App.js","index.js"],"names":["TopNav","toggleSideNav","sideNavOpen","className","id","onClick","icon","faTimes","faBars","to","faHome","faCheck","faShoppingBasket","faCalendar","faCog","history","createBrowserHistory","GET_USER","REMOVE_USER","ADD_USER","UPDATE_USER","defaultUser","getUser","user","type","updateUser","me","dispatch","a","axios","get","res","data","console","error","auth","email","password","method","firstName","lastName","avatarUrl","post","name","push","dispatchOrHistoryErr","GET_TASKS","ADD_TASK","DELETE_TASK","GET_SHOPPING_ITEMS","ADD_SHOPPING_ITEM","UPDATE_TASK","UPDATE_GROUP_TASK","initialState","getTasks","tasks","addTask","task","deleteTask","taskId","getShoppingItems","addShoppingItem","updateTask","fetchTasksThunk","log","removeTaskThunk","delete","fetchShoppingItemsThunk","GET_TASK","UPDATE_TASK_COMPLETE","updateTaskComplete","isCompleted","updateTaskCompletion","patch","updatedFields","GET_GROUPS","ADD_GROUP","DELETE_GROUP","GET_GROUP_USERS","getGroups","groups","addGroup","group","deleteGroup","groupId","fetchGroupsThunk","SET_SINGLE_GROUP","ADD_GROUP_TASK","setSingleGroup","addGroupTask","fetchSingleGroup","fetchSingleGroupTasks","fetchSingleGroupShopping","updateGroupThunk","put","singleGroupReducer","state","action","GET_USER_POINTS","GET_GROUP_POINTS","GET_USERGROUP_POINTS","ADD_COMPLETED_POINTS","DELETE_POINTS","fetchGroupPoints","groupPoints","addCompletedPoints","pointEntry","deletePoints","fetchUserPointsThunk","userId","userPoints","points","postCompletedPointsThunk","removeCompletedPointsThunk","reducer","combineReducers","singleTask","map","newTask","singleGroup","middleware","composeWithDevTools","applyMiddleware","thunkMiddleware","createLogger","collapsed","store","createStore","SideNav","props","this","fetchGroups","handleClick","data-src","class","length","key","style","backgroundColor","color","src","imageUrl","href","React","Component","connect","UserHome","HomePage","backgroundImage","height","width","AuthForm","selected","displayName","handleSubmit","images","image","setState","value","onSubmit","htmlFor","faUserCircle","placeholder","required","faEnvelope","faKey","faArrowLeft","faArrowRight","readOnly","response","mapDispatch","evt","preventDefault","formName","target","Login","withRouter","Signup","AccountSettings","formStatus","toggleFormStatus","bind","loadInitialData","oldPassword","newPassword","updatePassword","defaultValue","document","getElementById","handlePassword","updateUserThunk","updateData","updatePasswordThunk","Categories","CreateTaskModal","onClose","e","description","handleChange","event","alert","fetchTasks","dupCategories","categories","flat","forEach","cat","includes","show","children","onChange","rows","category","disabled","addTaskThunk","UpdateTaskModal","showTask","selectedTask","updatedTask","updateTaskThunk","TaskList","showModal","showTaskModal","postAwardedPoints","removePoints","userTasks","toggleCompleted","faCheckCircle","handleDelete","faPlusSquare","GroupTaskModal","fetchGroup","users","newGroupTask","addGroupTaskThunk","updateSingleTask","UpdateGroupTaskModal","updateGroupTask","updatedGroupTask","updateGroupTaskThunk","GroupTaskList","match","params","UpdateGroupTask","Task_Group","ShoppingModal","addItem","fetchItems","deleteItem","addShoppingItemThunk","ShoppingList","GroupShoppingModal","addGroupItemThunk","GroupShoppingList","GroupList","removeGroupThunk","updateGroup","CreateGroup","redirectTo","pathname","newGroup","addGroupThunk","SingleGroup","addUser","User_Group","role","newUser","addToGroupThunk","GroupRewards","filter","reduce","accum","point","pointCalc","domainPadding","theme","VictoryTheme","material","tickValues","dependentAxis","tickFormat","x","y","fill","fetchUserPoints","fetchGroupPointsThunk","fetchUserGroupPoints","userGroupPoints","fetchUserGroupPointsThunk","MyStats","Routes","isLoggedIn","path","component","exact","Account","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.22178568.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./topnav.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheck,\n  faHome,\n  faBars,\n  faShoppingBasket,\n  faCog,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faCalendar } from \"@fortawesome/free-regular-svg-icons\";\n\nconst TopNav = ({ toggleSideNav, sideNavOpen }) => {\n  return (\n    <div className=\"topnav-wrapper\">\n      <div id=\"left-nav-links\">\n        <div id=\"each-top-nav-link-open\" onClick={toggleSideNav}>\n          <div className=\"top-nav-icon-bar\">\n            {sideNavOpen ? (\n              <FontAwesomeIcon icon={faTimes} />\n            ) : (\n              <FontAwesomeIcon icon={faBars} />\n            )}\n          </div>\n        </div>\n        <div id=\"each-top-nav-link\">\n          <Link to=\"/home\">\n            <div className=\"top-nav-icon\">\n              <FontAwesomeIcon icon={faHome} />\n            </div>\n          </Link>\n        </div>\n        <div id=\"each-top-nav-link\">\n          <Link to=\"/tasks\">\n            <div className=\"top-nav-icon\">\n              <FontAwesomeIcon icon={faCheck} />\n            </div>\n          </Link>\n        </div>\n        <div id=\"each-top-nav-link\">\n          <Link to=\"/shoppinglist\">\n            <div className=\"top-nav-icon\">\n              <FontAwesomeIcon icon={faShoppingBasket} />\n            </div>\n          </Link>\n        </div>\n      </div>\n\n      <div id=\"right-nav-links\">\n        <div id=\"each-top-nav-link\">\n          <Link to=\"/calendar\">\n            <div className=\"top-nav-icon\">\n              <FontAwesomeIcon icon={faCalendar} />\n            </div>\n          </Link>\n        </div>\n\n        <div id=\"each-top-nav-link\">\n          <Link to=\"/account\">\n            <div className=\"top-nav-icon\">\n              <FontAwesomeIcon icon={faCog} />\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TopNav;\n","import { createMemoryHistory, createBrowserHistory } from \"history\";\n\nconst history =\n  process.env.NODE_ENV === \"test\"\n    ? createMemoryHistory()\n    : createBrowserHistory();\n\nexport default history;\n","import axios from \"axios\";\nimport history from \"../history\";\n\n/**\n * ACTION TYPES\n */\nconst GET_USER = \"GET_USER\";\nconst REMOVE_USER = \"REMOVE_USER\";\nconst ADD_USER = \"ADD_USER\";\nconst UPDATE_USER = \"UPDATE_USER\";\nconst UPDATE_PASSWORD = \"UPDATE_PASSWORD\";\n\n/**\n * INITIAL STATE\n */\nconst defaultUser = {};\n\n/**\n * ACTION CREATORS\n */\nconst getUser = (user) => ({ type: GET_USER, user });\nconst removeUser = () => ({ type: REMOVE_USER });\nconst addUser = (user) => ({ type: ADD_USER, user });\nconst updateUser = (user) => ({ type: UPDATE_USER, user });\nconst updatePassword = (user) => ({ type: UPDATE_PASSWORD, user });\n/**\n * THUNK CREATORS\n */\nexport const me = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/auth/me\");\n    dispatch(getUser(res.data || defaultUser));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const auth = (\n  email,\n  password,\n  method,\n  firstName,\n  lastName,\n  avatarUrl\n) => async (dispatch) => {\n  let res;\n  try {\n    res = await axios.post(`/auth/${method}`, {\n      email,\n      password,\n      name,\n      firstName,\n      lastName,\n      avatarUrl,\n    });\n    history.push(\"/home\");\n  } catch (authError) {\n    return dispatch(getUser({ error: authError }));\n  }\n  try {\n    dispatch(getUser(res.data));\n    history.push(\"/home\");\n  } catch (dispatchOrHistoryErr) {\n    console.error(dispatchOrHistoryErr);\n  }\n};\n\nexport const fetchUserThunk = (userId) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.get(`/api/users/${userId}`);\n      dispatch(getUser(data));\n    } catch (error) {\n      console.log(\"error editing user info\");\n    }\n  };\n};\n\nexport const updateUserThunk = (\n  userId,\n  firstName,\n  lastName,\n  email,\n  avatarUrl\n) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.put(`/api/users/${userId}`, {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        avatarUrl,\n      });\n\n      dispatch(updateUser(data));\n    } catch (error) {\n      console.log(\"error editing user info\");\n    }\n  };\n};\n\nexport const updateUserPoints = (userId, firstName, lastName, email) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.put(`/api/users/${userId}`, {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n      });\n\n      dispatch(updateUser(data));\n    } catch (error) {\n      console.log(\"error editing user info\");\n    }\n  };\n};\n\nexport const updatePasswordThunk = (userId, oldPassword, newPassword) => async (\n  dispatch\n) => {\n  try {\n    const { updateData } = await axios.put(`/api/users/${userId}`, {\n      password: newPassword,\n    });\n    dispatch(updatePassword(updateData));\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const logout = () => async (dispatch) => {\n  try {\n    await axios.post(\"/auth/logout\");\n    dispatch(removeUser());\n    history.push(\"/login\");\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n/**\n * REDUCER\n */\nexport default function (state = defaultUser, action) {\n  switch (action.type) {\n    case GET_USER:\n      return action.user;\n    case REMOVE_USER:\n      return defaultUser;\n    case ADD_USER:\n      return [...state, action.user];\n    case UPDATE_USER:\n      return action.user;\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\n\n/**\n * ACTION TYPES\n */\nconst GET_TASKS = \"GET_TASKS\";\nconst ADD_TASK = \"ADD_TASK\";\nconst DELETE_TASK = \"DELETE_TASK\";\nconst GET_SHOPPING_ITEMS = \"GET_SHOPPING_ITEMS\";\nconst ADD_SHOPPING_ITEM = \"ADD_SHOPPING_ITEM\";\nconst UPDATE_TASK = \"UPDATE_TASK\";\nconst UPDATE_GROUP_TASK = \"UPDATE_GROUP_TASK\";\n\n/**\n * INITIAL STATE\n */\n\nconst initialState = {};\n\n/**\n * ACTION CREATORS\n */\n\nconst getTasks = (tasks) => ({ type: GET_TASKS, tasks });\nconst addTask = (task) => ({ type: ADD_TASK, task });\nconst deleteTask = (taskId) => ({ type: DELETE_TASK, taskId });\nconst getShoppingItems = (tasks) => ({ type: GET_SHOPPING_ITEMS, tasks });\nconst addShoppingItem = (task) => ({ type: ADD_SHOPPING_ITEM, task });\nconst updateTask = (task) => ({ type: UPDATE_TASK, task });\nconst updateGroupTask = (newTask) => ({ type: UPDATE_GROUP_TASK, newTask });\n\n/**\n * THUNK CREATORS\n */\n\nexport const fetchTasksThunk = () => async (dispatch) => {\n  try {\n    const { data: tasks } = await axios.get(`/api/tasks`);\n    dispatch(getTasks(tasks));\n  } catch (error) {\n    console.log(\"error fetching tasks\");\n  }\n};\n\nexport const addTaskThunk = (task) => async (dispatch) => {\n  try {\n    const { data: newTask } = await axios.post(\"/api/tasks\", task);\n    dispatch(addTask(newTask));\n  } catch (error) {\n    console.error(\"Error adding task!\");\n    console.error(error);\n  }\n};\n\nexport const removeTaskThunk = (taskId) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/tasks/${taskId}`);\n    dispatch(deleteTask(taskId));\n  } catch (error) {\n    console.error(\"Error deleting task!\");\n    console.error(error);\n  }\n};\n\nexport const fetchShoppingItemsThunk = () => async (dispatch) => {\n  try {\n    const { data: tasks } = await axios.get(`/api/tasks/shopping`);\n    dispatch(getShoppingItems(tasks));\n  } catch (error) {\n    console.log(\"error fetching tasks\");\n  }\n};\n\nexport const addShoppingItemThunk = (task) => async (dispatch) => {\n  try {\n    const { data: newTask } = await axios.post(\"/api/tasks/shopping\", task);\n    dispatch(addShoppingItem(newTask));\n  } catch (error) {\n    console.error(\"Error adding task!\");\n    console.error(error);\n  }\n};\n\nexport const updateTaskThunk = (task) => async (dispatch) => {\n  try {\n    const { data: updatedTask } = await axios.put(`/api/tasks/`, task);\n    dispatch(updateTask(updatedTask));\n  } catch (error) {\n    console.error(\"Error updating task!\");\n    console.error(error);\n  }\n};\n\nexport const updateGroupTaskThunk = (task) => async (dispatch) => {\n  try {\n    const { data: updatedGroupTask } = await axios.put(\n      `/api/groups/:groupId/tasks/`,\n      task\n    );\n    // console.log('UPDATED GROUP TASK', updatedGroupTask)\n    dispatch(updateGroupTask(updatedGroupTask));\n  } catch (error) {\n    console.error(\"Error updating group task!\");\n    console.error(error);\n  }\n};\n\nexport default function tasksReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_TASKS:\n      return action.tasks;\n    case GET_SHOPPING_ITEMS:\n      return action.tasks;\n    case ADD_TASK:\n      return { ...state, ...action.task };\n    case ADD_SHOPPING_ITEM:\n      return { ...state, ...action.task };\n    case DELETE_TASK:\n      return { ...state };\n    case UPDATE_TASK:\n      return {\n        ...state,\n        tasks: state.tasks.map((task) => {\n          if (task.id === action.task.id) return action.task;\n          else return task;\n        }),\n      };\n    case UPDATE_GROUP_TASK:\n      // console.log('STATE TASKS!!!!--->', state)\n      return { ...state, ...action.newTask };\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\n\n// intialState\nconst initialState = {};\n\n// action constants\nconst GET_TASK = \"GET_TASK\";\nconst UPDATE_TASK = \"UPDATE_TASK\";\nconst UPDATE_TASK_COMPLETE = \"UPDATE_TASK_COMPLETE\";\n\nconst getTask = (task) => ({ type: GET_SINGLE_TASK, task });\nconst updateTask = (task) => ({ type: UPDATE_TASK, task });\nconst updateTaskComplete = (taskId, isCompleted) => ({\n  type: UPDATE_TASK_COMPLETE,\n  taskId,\n  isCompleted,\n});\n\n// thunk creators\nexport const fetchTaskThunk = (taskId) => async (dispatch) => {\n  try {\n    const { data: users } = await axios.get(`/api/tasks`);\n\n    const tasks = users.tasks;\n    const task = tasks.filter((task) => task.id === taskId);\n    console.log(\"SINGLE TASK NEEDED\", task);\n\n    dispatch(getTask(task));\n  } catch (error) {\n    console.log(\"error fetching task\");\n  }\n};\n\nexport const updateSingleTask = (taskId) => async (dispatch) => {\n  try {\n    const { data: updatedTask } = await axios.put(`/api/tasks/${taskId}`);\n    dispatch(updateTask(updatedTask));\n  } catch (error) {\n    console.error(\"Error updating task!\");\n    console.error(error);\n  }\n};\n\nexport const updateTaskCompletion = (taskId, isCompleted) => async (\n  dispatch\n) => {\n  try {\n    await axios.patch(`/api/tasks/${taskId}`, {\n      updatedFields: { isCompleted },\n    });\n    dispatch(updateTaskComplete(taskId, isCompleted));\n  } catch (error) {\n    console.error(\"Error updating task!\");\n    console.error(error);\n  }\n};\n\nexport default function singleTaskReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_TASK:\n      return action.task;\n    case UPDATE_TASK:\n      return { ...state, ...action.task };\n    case UPDATE_TASK_COMPLETE:\n      return { ...state, ...action.task };\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\n\n/**\n * ACTION TYPES\n */\n\nconst GET_GROUPS = \"GET_GROUPS\";\nconst ADD_GROUP = \"ADD_GROUP\";\nconst DELETE_GROUP = \"DELETE_GROUP\";\nconst GET_GROUP_USERS = \"GET_GROUP_USERS\";\n\n/**\n * INITIAL STATE\n */\n\nconst initialState = [];\n\n/**\n * ACTION CREATORS\n */\nconst getGroups = (groups) => ({ type: GET_GROUPS, groups });\nconst addGroup = (group) => ({ type: ADD_GROUP, group });\nconst deleteGroup = (groupId) => ({ type: DELETE_GROUP, groupId });\nconst setGroupUsers = (groups) => ({ type: GET_GROUP_USERS, groups });\n\n/**\n * THUNK CREATORS\n */\n\nexport const fetchGroupsThunk = () => async (dispatch) => {\n  try {\n    const { data: groups } = await axios.get(`/api/groups`);\n    dispatch(getGroups(groups));\n  } catch (error) {\n    console.log(\"error fetching groups\");\n  }\n};\n\nexport const fetchGroupUsersThunk = (groupId) => {\n  return async (dispatch) => {\n    try {\n      const { data: groups } = await axios.get(\n        `/api/groups/${groupId}/tasks/add`\n      );\n      dispatch(setGroupUsers(groups));\n    } catch (err) {\n      console.error(\"There was a problem fetching this group!\");\n      console.error(err);\n    }\n  };\n};\n\nexport const addGroupThunk = (group) => async (dispatch) => {\n  try {\n    const { data: newGroup } = await axios.post(\"/api/groups\", group);\n    dispatch(addGroup(newGroup));\n  } catch (error) {\n    console.error(\"Error adding group!\");\n    console.error(error);\n  }\n};\n\nexport const removeGroupThunk = (groupId) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/groups/${groupId}`);\n    dispatch(deleteGroup(groupId));\n  } catch (error) {\n    console.error(\"Error deleting group!\");\n    console.error(error);\n  }\n};\n\nexport default function groupsReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_GROUPS:\n      return action.groups;\n    case ADD_GROUP:\n      return [...state, action.group];\n    case DELETE_GROUP:\n      return [...state];\n    case GET_GROUP_USERS:\n      return action.groups;\n    default:\n      return state;\n  }\n}\n","import axios from \"axios\";\n\n//ACTIONS\nconst SET_SINGLE_GROUP = \"SET_SINGLE_GROUP\";\nconst ADD_GROUP_TASK = \"ADD_GROUP_TASK\";\n\n//ACTION CREATORS\n\nexport const setSingleGroup = (group) => {\n  return {\n    type: SET_SINGLE_GROUP,\n    group,\n  };\n};\n\nconst addGroupTask = (task) => ({ type: ADD_GROUP_TASK, task });\n\n//THUNK CREATORS\n\nexport const fetchSingleGroup = (groupId) => {\n  return async (dispatch) => {\n    try {\n      const { data: group } = await axios.get(`/api/groups/${groupId}`);\n      dispatch(setSingleGroup(group));\n    } catch (err) {\n      console.error(\"There was a problem fetching this group!\");\n      console.error(err);\n    }\n  };\n};\n\nexport const fetchSingleGroupTasks = (groupId) => {\n  return async (dispatch) => {\n    try {\n      const { data: group } = await axios.get(`/api/groups/${groupId}/tasks`);\n      dispatch(setSingleGroup(group));\n    } catch (err) {\n      console.error(\"There was a problem fetching this group!\");\n      console.error(err);\n    }\n  };\n};\n\nexport const fetchSingleGroupShopping = (groupId) => {\n  return async (dispatch) => {\n    try {\n      const { data: group } = await axios.get(\n        `/api/groups/${groupId}/shopping`\n      );\n      dispatch(setSingleGroup(group));\n    } catch (err) {\n      console.error(\"There was a problem fetching this group!\");\n      console.error(err);\n    }\n  };\n};\n\n//update group info\nexport const updateGroupThunk = (group) => {\n  return async (dispatch) => {\n    try {\n      const { data } = await axios.put(`/api/groups/${groupId}`, group);\n      dispatch(setSingleGroup(data));\n    } catch (error) {\n      console.log(\"error updating group\");\n    }\n  };\n};\n\n// add user to group\nexport const addToGroupThunk = (groupId, userId) => {\n  return async (dispatch) => {\n    try {\n      const { data: newUser } = await axios.post(`/api/groups/${groupId}`, {\n        userId,\n      });\n      dispatch(setSingleGroup(newUser));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\n//remove user from group\nexport const deleteFromGroupThunk = (groupId, userId) => {\n  return async (dispatch) => {\n    try {\n      const { data: deletedUser } = await axios.delete(\n        `/api/groups/${groupId}`,\n        {\n          userId,\n        }\n      );\n      dispatch(setSingleGroup(deletedUser));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\n// add task to group\nexport const addGroupTaskThunk = (groupId, task) => async (dispatch) => {\n  try {\n    const { data: newGroupTask } = await axios.post(\n      `/api/groups/${groupId}/tasks`,\n      task\n    );\n    dispatch(addGroupTask(newGroupTask));\n  } catch (error) {\n    console.error(\"Error adding task!\");\n    console.error(error);\n  }\n};\n\nexport const addGroupItemThunk = (groupId, task) => async (dispatch) => {\n  try {\n    const { data: newGroupTask } = await axios.post(\n      `/api/groups/${groupId}/shopping`,\n      task\n    );\n    dispatch(addGroupTask(newGroupTask));\n  } catch (error) {\n    console.error(\"Error adding shopping item!\");\n    console.error(error);\n  }\n};\n\n//INITIAL STATE\nconst initialState = {};\n\n//REDUCER\n\nconst singleGroupReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SINGLE_GROUP:\n      return action.group;\n    case ADD_GROUP_TASK:\n      return { ...state, ...action.task };\n    default:\n      return state;\n  }\n};\n\nexport default singleGroupReducer;\n","import axios from \"axios\";\n\nconst GET_USER_POINTS = \"GET_USER_POINTS\";\nconst GET_GROUP_POINTS = \"GET_GROUP_POINTS\";\nconst GET_USERGROUP_POINTS = \"GET_USERGROUP_POINTS\";\nconst ADD_COMPLETED_POINTS = \"ADD_COMPLETED_POINTS\";\nconst DELETE_POINTS = \"DELETE_POINTS\";\n\nconst fetchUserPoints = (points) => ({\n  type: GET_USER_POINTS,\n  points,\n});\nconst fetchGroupPoints = (groupPoints) => ({\n  type: GET_GROUP_POINTS,\n  groupPoints,\n});\nconst fetchUserGroupPoints = (points) => ({\n  type: GET_USERGROUP_POINTS,\n  points,\n});\nconst addCompletedPoints = (pointEntry) => ({\n  type: ADD_COMPLETED_POINTS,\n  pointEntry,\n});\n\nconst deletePoints = (pointEntry) => ({\n  type: DELETE_POINTS,\n  pointEntry,\n});\n\nexport const fetchUserPointsThunk = (userId) => {\n  return async (dispatch) => {\n    try {\n      const { data: userPoints } = await axios.get(`/api/points/${userId}`);\n      dispatch(fetchUserPoints(userPoints));\n    } catch (error) {\n      console.error(\"there was an error fetching your points\");\n    }\n  };\n};\n\n//GET api/groups/:groupId/rewards\nexport const fetchGroupPointsThunk = (groupId) => {\n  return async (dispatch) => {\n    try {\n      const { data: groupPoints } = await axios.get(\n        `/api/groups/${groupId}/rewards`\n      );\n      console.log('GROUP OBJ W DATA\"', groupPoints);\n      dispatch(fetchGroupPoints(groupPoints));\n    } catch (error) {\n      console.error(\"there was an error fetching group points!\");\n    }\n  };\n};\n\n//GET api/groups/:groupId/:userId/rewards\nexport const fetchUserGroupPointsThunk = (userId, groupId) => {\n  return async (dispatch) => {\n    try {\n      const userGroupPoints = await axios.get(\n        `/api/groups/${groupId}/${userId}/rewards`\n      );\n      dispatch(fetchUserGroupPoints(userGroupPoints));\n    } catch (error) {\n      console.error(\"there was an error fetching group points for this user\");\n    }\n  };\n};\n\nexport const postCompletedPointsThunk = (taskId) => {\n  // console.log(\"INSIDE POINTS COMPLETE THUNK!\");\n  return async (dispatch) => {\n    try {\n      const { data: pointEntry } = await axios.post(`/api/points/`, taskId);\n      dispatch(addCompletedPoints(pointEntry));\n    } catch (err) {\n      console.error(\"There was a problem adding points!\");\n      console.error(err);\n    }\n  };\n};\n\nexport const removeCompletedPointsThunk = (taskId) => {\n  console.log(\"INSIDE POINTS COMPLETE THUNK!\");\n  return async (dispatch) => {\n    try {\n      const { data: pointEntry } = await axios.delete(`/api/points/${taskId}`);\n      dispatch(deletePoints(pointEntry));\n    } catch (err) {\n      console.error(\"There was a problem deleting points!\");\n      console.error(err);\n    }\n  };\n};\n\nconst initialState = {};\n\nexport default function pointsReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_COMPLETED_POINTS:\n      return action.pointEntry;\n    case DELETE_POINTS:\n      return action.pointEntry;\n    case GET_USER_POINTS:\n      return action.points;\n    case GET_GROUP_POINTS:\n      return action.groupPoints;\n    case GET_USERGROUP_POINTS:\n      return action.points;\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport user from \"./user\";\nimport tasks from \"./tasks\";\nimport singleTask from \"./singletask\";\nimport groups from \"./allGroups\";\nimport singleGroup from \"./singleGroup\";\nimport points from \"./point\";\n\nconst reducer = combineReducers({\n  user,\n  singleTask,\n  tasks,\n  groups,\n  singleGroup,\n  points,\n});\n\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunkMiddleware, createLogger({ collapsed: true }))\n);\nconst store = createStore(reducer, middleware);\n\nexport default store;\nexport * from \"./user\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../../store\";\nimport PropTypes from \"prop-types\";\nimport { fetchGroupsThunk } from \"../../store/allGroups\";\nimport \"./sidenav.css\";\n\nclass SideNav extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.fetchGroups(this.props.user.id);\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteGroup(id);\n      this.props.fetchGroups();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  render() {\n    let { groups, user, handleClick, toggleSideNav } = this.props;\n    return (\n      <div className=\"side-nav-wrapper\">\n        <div id=\"nav-user-wrap\">\n          <div id=\"user-nav\">\n            <Link to=\"/account\" onClick={toggleSideNav}>\n              <img data-src={user.avatarUrl} id=\"user-icon\" class=\"lazyload\"></img>{\" \"}\n            </Link>\n            {user.firstName}\n          </div>\n\n          <h4 className=\"nav-tool-title\">My Groups</h4>\n          {!groups.length ? (\n            \"You are not a part of any groups.\"\n          ) : (\n            <div id=\"nav-group\">\n              {groups.map((group) => (\n                <div\n                  key={group.id}\n                  id=\"each-nav-group\"\n                  style={{ backgroundColor: group.color }}\n                >\n                  <Link to={`/groups/${group.id}`} onClick={toggleSideNav}>\n                    <img src={group.imageUrl} className=\"nav-group-icon\"></img>\n                    <div id=\"nav-group-name\">{group.name}</div>\n                  </Link>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        <div className=\"nav-user-links-wrap\">\n          <div className=\"nav-user-links a\">\n            <Link to=\"/groups\" onClick={toggleSideNav}>\n              Group Settings\n            </Link>\n          </div>\n          <div className=\"nav-user-links b\">\n            <a href=\"#\" onClick={handleClick}>\n              logout\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  groups: state.groups,\n  user: state.user,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroups: (userId) => dispatch(fetchGroupsThunk(userId)),\n  handleClick: () => dispatch(logout()),\n});\n\nexport default connect(mapState, mapDispatch)(SideNav);\n\nSideNav.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./UserHome.css\";\n// import moment from \"moment\";\n\nclass UserHome extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { firstName } = this.props;\n    // const now = new Date();\n    // const currHour = moment().format(\"HH\");\n\n    return (\n      <div className=\"userhome-wrapper\">\n        {/* {moment(now).format(\"h:mm a\")}\n        <div id=\"home-top\">\n          <div id=\"user-greet\">\n            {(() => {\n              if (currHour >= 3 && currHour < 12) {\n                return <h3>Good morning, {firstName}.</h3>;\n              } else if (currHour >= 12 && currHour <= 18) {\n                return <h3>Good afternoon, {firstName}.</h3>;\n              } else if (currHour >= 18 && currHour < 24) {\n                return <h3>Good evening, {firstName}.</h3>;\n              } else if (currHour >= 1 && currHour < 3) {\n                return <h3>Good evening, {firstName}.</h3>;\n              } else {\n                return <h3>Hello, {firstName}.</h3>;\n              }\n            })()} */}\n        hello world\n      </div>\n      //   </div>\n      // </div>\n    );\n  }\n}\nconst mapState = (state) => {\n  return {\n    firstName: state.user.firstName,\n  };\n};\n\nexport default connect(mapState)(UserHome);\n\nUserHome.propTypes = {\n  firstName: PropTypes.string,\n};\n","import React from \"react\";\nimport \"./HomePage.css\";\nimport { Link } from \"react-router-dom\";\n\nexport const HomePage = () => {\n  return (\n    <div\n      className=\"homepage-wrap\"\n      style={{\n        backgroundImage: \"url(\" + \"/assets/backgrounds/coworker-bg.png\" + \")\",\n      }}\n    >\n      <div id=\"site-home-header\">\n        <div id=\"header-wrap-home\">\n          <div id=\"navtitle\">Planningo</div>\n\n          <div id=\"links-home\">\n            <Link to=\"/login\">Login / Sign Up</Link>\n          </div>\n        </div>\n      </div>\n\n      <div id=\"site-home-content\">\n        <img\n          src={\"/assets/arabica-1055.png\"}\n          id=\"bunnyphone\"\n          height=\"245\"\n          width=\"245\"\n        ></img>\n        <div id=\"site-home-verbs\">Organize * Share * Manage * Track</div>\n        <p className=\"site-home-intro\">\n          Create, add, and edit custom groups to help sort important tasks and\n          shopping lists. View a single user or group’s progress with our points\n          system data visualizer.{\" \"}\n        </p>\n        <p className=\"site-home-intro\">\n          Planningo is the perfect app to track to-do’s for your home, work, and\n          even friends!{\" \"}\n        </p>\n        <div className=\"site-home-getting-started\">\n          Getting Started:\n          <ol>\n            <li>Sign up</li>\n            <li>\n              Create your first group and add members! If you would like to use\n              Planningo as a personal task manager, you can create a group for\n              just yourself.\n            </li>\n            <li>\n              Click on the checkmark or shopping basket icon in our Nav Bar to\n              start adding to-do’s!\n            </li>\n            <li>\n              Check off any completed tasks or shopping list items to start\n              racking up those points.\n            </li>\n            <li>\n              Take a gander at your stats page to see your progress rendered as\n              a bar graph\n            </li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { auth } from \"../../store\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport \"./authform.css\";\n\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faEnvelope,\n  faKey,\n  faUserCircle,\n  faArrowLeft,\n  faArrowRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nclass AuthForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: \"/assets/icons/users/002-girl.png\",\n    };\n  }\n\n  render() {\n    const { name, displayName, handleSubmit, error } = this.props;\n    const array = [\n      \"001-girl\",\n      \"002-girl\",\n      \"003-man\",\n      \"004-boy\",\n      \"005-boy\",\n      \"006-boy\",\n      \"007-woman\",\n      \"008-businessman\",\n      \"009-businessman\",\n      \"013-woman\",\n      \"014-grandfather\",\n      \"015-man\",\n      \"016-hipster\",\n      \"017-man\",\n      \"018-man\",\n      \"019-man\",\n      \"020-delivery man\",\n      \"021-man\",\n      \"022-man\",\n      \"023-man\",\n      \"024-man\",\n      \"025-woman\",\n      \"026-woman\",\n      \"027-grandmother\",\n      \"028-girl\",\n      \"029-girl\",\n      \"030-woman\",\n      \"031-rockstar\",\n      \"032-businesswoman\",\n      \"033-woman\",\n      \"034-woman\",\n      \"035-woman\",\n      \"036-woman\",\n    ];\n    const images = array.map((image) => {\n      return (\n        <img\n          key={image}\n          src={`/assets/icons/users/${image}.png`}\n          className={\n            this.state.selected === `/assets/icons/users/${image}.png`\n              ? \"pick-avatar selected\"\n              : \"pick-avatar\"\n          }\n          onClick={() => {\n            this.setState({ selected: `/assets/icons/users/${image}.png` });\n          }}\n          value={image}\n        />\n      );\n    });\n\n    return (\n      <div className=\"forms\">\n        <div className=\"form-container\">\n          <div className=\"form-info\">\n            <form onSubmit={handleSubmit} name={name}>\n              <h1 id=\"authtitle\">{displayName}</h1>\n              {displayName != \"Login\" ? (\n                <div>\n                  <div className=\"form-input\">\n                    <label htmlFor=\"firstName\">\n                      <small className=\"form-names\">\n                        <div className=\"form-icon\">\n                          <FontAwesomeIcon icon={faUserCircle} />\n                        </div>\n                      </small>\n                    </label>\n                    <input\n                      className=\"info-input\"\n                      name=\"firstName\"\n                      type=\"text\"\n                      placeholder=\"First name\"\n                      required\n                    />\n                  </div>\n\n                  <div className=\"form-input\">\n                    <label htmlFor=\"lastName\">\n                      <small className=\"form-names\">\n                        <div className=\"form-icon\">\n                          <FontAwesomeIcon icon={faUserCircle} />\n                        </div>\n                      </small>\n                    </label>\n                    <input\n                      className=\"info-input\"\n                      name=\"lastName\"\n                      type=\"text\"\n                      placeholder=\"Last name\"\n                      required\n                    />\n                  </div>\n                </div>\n              ) : null}\n              <div className=\"form-input\">\n                <label htmlFor=\"email\">\n                  <small className=\"form-names\">\n                    <div className=\"form-icon\">\n                      <FontAwesomeIcon icon={faEnvelope} />\n                    </div>\n                  </small>\n                </label>\n                <input\n                  className=\"info-input\"\n                  name=\"email\"\n                  placeholder=\"Email address\"\n                  type=\"text\"\n                  required\n                />\n              </div>\n              <div className=\"form-input\">\n                <label htmlFor=\"password\">\n                  <small className=\"form-names\">\n                    <div className=\"form-icon\">\n                      <FontAwesomeIcon icon={faKey} />\n                    </div>\n                  </small>\n                </label>\n                <input\n                  className=\"info-input\"\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  required\n                />\n              </div>\n\n              {displayName != \"Login\" ? (\n                <div className=\"image-pick\">\n                  <label htmlFor=\"avatarUrl\">\n                    <div id=\"chooser-title\">\n                      <div className=\"form-icon\">\n                        <FontAwesomeIcon icon={faArrowLeft} />\n                      </div>\n                      Choose Icon\n                      <div className=\"form-icon\">\n                        <FontAwesomeIcon icon={faArrowRight} />\n                      </div>\n                    </div>\n                  </label>\n                  <div id=\"image-picker-box\">{images}</div>\n                  <input\n                    name=\"avatarUrl\"\n                    className=\"hide-url\"\n                    value={this.state.selected}\n                    readOnly={true}\n                  />\n                </div>\n              ) : null}\n\n              <div id=\"button-wrap\">\n                <button className=\"form-button\" type=\"submit\">\n                  {displayName}\n                </button>\n              </div>\n            </form>\n            <h4>\n              {error && error.response && <div> {error.response.data} </div>}\n            </h4>\n          </div>\n          <div id=\"auth-link-container\">\n            <a href=\"/auth/google\">{displayName} with Google</a>\n            <div id=\"login-or-signup\">\n              {displayName === \"Login\" ? (\n                <div>\n                  No account? <Link to=\"/signup\">Sign Up</Link>\n                </div>\n              ) : (\n                <div>\n                  Have an account? <Link to=\"/login\">Login</Link>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapLogin = (state) => {\n  return {\n    name: \"login\",\n    displayName: \"Login\",\n    error: state.user.error,\n  };\n};\n\nconst mapSignup = (state) => {\n  return {\n    name: \"signup\",\n    displayName: \"Sign Up\",\n    error: state.user.error,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    handleSubmit(evt) {\n      evt.preventDefault();\n      const formName = evt.target.name;\n\n      if (formName === \"login\") {\n        const email = evt.target.email.value;\n        const password = evt.target.password.value;\n        dispatch(auth(email, password, formName));\n      } else if (formName === \"signup\") {\n        const email = evt.target.email.value;\n        const password = evt.target.password.value;\n        const firstName = evt.target.firstName.value;\n        const lastName = evt.target.lastName.value;\n        const avatarUrl = evt.target.avatarUrl.value;\n        dispatch(\n          auth(email, password, formName, firstName, lastName, avatarUrl)\n        );\n      }\n    },\n  };\n};\n\nexport const Login = withRouter(connect(mapLogin, mapDispatch)(AuthForm));\nexport const Signup = withRouter(connect(mapSignup, mapDispatch)(AuthForm));\n\nAuthForm.propTypes = {\n  name: PropTypes.string.isRequired,\n  displayName: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  error: PropTypes.object,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * COMPONENT\n */\nexport const Account = (props) => {\n  const { email } = props;\n\n  return (\n    <div>\n      <h3>My Account</h3>\n      <Link to=\"/account/settings\">Account Settings</Link>\n      <div>Edit Groups</div>\n      <div>My Stats</div>\n    </div>\n  );\n};\n\n/**\n * CONTAINER\n */\nconst mapState = (state) => {\n  return {\n    email: state.user.email,\n  };\n};\n\nexport default connect(mapState)(Account);\n\n/**\n * PROP TYPES\n */\nAccount.propTypes = {\n  email: PropTypes.string,\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { me } from \"../../store\";\nimport { updateUserThunk, updatePasswordThunk } from \"../../store/user\";\n\nclass AccountSettings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formStatus: false,\n    };\n    this.toggleFormStatus = this.toggleFormStatus.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.loadInitialData();\n  }\n  toggleFormStatus() {\n    this.setState({ formStatus: !this.state.formStatus });\n  }\n  handleSubmit(userId, firstName, lastName, email, avatarUrl) {\n    this.props.updateUser(userId, firstName, lastName, email, avatarUrl);\n  }\n  handlePassword(userId, oldPassword, newPassword) {\n    this.props.updatePassword(userId, oldPassword, newPassword);\n  }\n\n  render() {\n    const { user } = this.props;\n\n    return (\n      <div>\n        <div>\n          <h3>Personal Info:</h3>\n\n          {this.state.formStatus ? (\n            <div>\n              <button onClick={this.toggleFormStatus}>Cancel Edit</button>\n              <form id=\"edit-profile-form\">\n                <label htmlFor=\"name\"> Icon: </label>\n                <input\n                  name=\"avatarUrl\"\n                  id=\"avatarUrl\"\n                  type=\"text\"\n                  placeholder={user.avatarUrl}\n                  defaultValue={user.avatarUrl}\n                />\n                <label htmlFor=\"name\"> Name: </label>\n                <input\n                  name=\"firstName\"\n                  id=\"firstName\"\n                  type=\"text\"\n                  placeholder={user.firstName}\n                  defaultValue={user.firstName}\n                />\n                <input\n                  name=\"lastName\"\n                  id=\"lastName\"\n                  type=\"text\"\n                  placeholder={user.lastName}\n                  defaultValue={user.lastName}\n                />\n                <br />\n                <label htmlFor=\"email\"> Email: </label>\n                <input\n                  name=\"email\"\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder={user.email}\n                  defaultValue={user.email}\n                />\n                <button\n                  className=\"update-profile\"\n                  type=\"button\"\n                  onClick={() => {\n                    this.handleSubmit(\n                      user.id,\n                      document.getElementById(\"firstName\").value,\n                      document.getElementById(\"lastName\").value,\n                      document.getElementById(\"email\").value\n                    );\n                  }}\n                >\n                  Update Profile\n                </button>\n              </form>\n              <form id=\"edit-password-form\" onSubmit={this.handlePassword}>\n                <label htmlFor=\"old-password\"> Old Password: </label>\n                <input\n                  name=\"old-password\"\n                  id=\"old-password\"\n                  type=\"password\"\n                  defaultValue={user.password}\n                />\n                <label htmlFor=\"new-password\"> New Password: </label>\n                <input\n                  name=\"new-password\"\n                  id=\"new-password\"\n                  type=\"password\"\n                  defaultValue={user.password}\n                />\n                {/* <label htmlFor=\"confirm-password\"> Confirm Password: </label>\n                <input name=\"confirm-password\" type=\"password\" /> */}\n                <button\n                  className=\"update-password\"\n                  type=\"button\"\n                  onClick={() => {\n                    this.handlePassword(\n                      user.id,\n                      document.getElementById(\"old-password\").value,\n                      document.getElementById(\"new-password\").value\n                    );\n                  }}\n                >\n                  Update Password\n                </button>\n              </form>\n            </div>\n          ) : (\n            <div>\n              <button onClick={this.toggleFormStatus}>Edit</button>\n              <p>\n                Name: {user.firstName} {user.lastName}\n              </p>\n              <p>Email: {user.email} </p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    loadInitialData() {\n      dispatch(me());\n    },\n    updateUser(userId, firstName, lastName, email) {\n      dispatch(updateUserThunk(userId, firstName, lastName, email));\n    },\n    updatePassword(userId, oldPassword, newPassword) {\n      dispatch(updatePasswordThunk(userId, oldPassword, newPassword));\n    },\n  };\n};\n\nexport default connect(mapState, mapDispatch)(AccountSettings);\n\nAccountSettings.propTypes = {\n  loadInitialData: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\n\nfunction Categories(props) {\n  let chosenGroup = this.props.chosenGroup;\n  return (\n    <div id=\"task-box-categories\">\n      <h3 id=\"cat-title\">Category</h3>\n      {chosenGroup & (chosenGroup.length > 0)\n        ? chosenGroup.categories\n          ? chosenGroup.categories.map((category) => (\n              <div key={category.id} className=\"each-cat-wrap\">\n                <div\n                  id=\"cat-icon-wrap\"\n                  style={{ backgroundColor: category.color }}\n                >\n                  <img src={category.imageUrl} className=\"cat-icon\"></img>\n                </div>\n                {category.name}\n              </div>\n            ))\n          : \"null\"\n        : \"null\"}\n    </div>\n  );\n}\n\nexport default Categories;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Categories from \"./Categories\";\nimport {\n  fetchTasksThunk,\n  removeTaskThunk,\n  addTaskThunk,\n} from \"../../store/tasks\";\nimport \"./taskmodal.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nclass CreateTaskModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      selected: \"\",\n      description: \"\",\n      points: 0,\n      selected: \"\",\n      error: null,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      if (this.state.name == \"\" || this.state.selected == \"\") {\n        alert(\"task name OR group can't be empty!\");\n      } else {\n        await this.props.addTask(this.state);\n        await this.props.fetchTasks();\n        this.setState({\n          name: \"\",\n          selected: \"\",\n          description: \"\",\n          points: 0,\n        });\n        this.props.onClose();\n      }\n    } catch (err) {\n      console.log(\"error creating task\", err);\n    }\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteTask(id);\n      this.props.fetchTasks();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  onClose = (e) => {\n    this.props.onClose && this.props.onClose(e);\n  };\n\n  // cats() {\n  //   const chosenGroup = this.props.groups.filter((group) => group.name === this.state.selected)\n  //   console.log(\"Chosen!!!!!\", chosenGroup)\n\n  //   this.setState({chosenGroup: chosenGroup})\n  // }\n\n  render() {\n    const { groups } = this.props.tasks;\n    // const chosenGroup = this.props.groups.filter((group) => group.name === this.state.selected)\n    // console.log(\"Chosen!!!!!\", chosenGroup)\n\n    const listCategories = this.props.groups.map((group) => group.categories);\n    //  console.log('LIST CATEGORIES', listCategories)\n    const dupCategories = listCategories.flat();\n    let categories = [];\n    dupCategories.forEach((cat) => {\n      if (!categories.includes(cat.name && !cat.groupId)) {\n        categories.push(cat);\n      }\n    });\n    //  console.log(\"CATEGORIES!!!!!--->\", categories)\n\n    if (!this.props.show) {\n      return null;\n    }\n\n    return (\n      <div>\n        <div>{this.props.children}</div>\n        <div className=\"task-modal-content\">\n          <div id=\"top-taskmodal-div\">\n            <div id=\"modal-title\">NEW TASK</div>\n            <button\n              onClick={(e) => this.onClose(e)}\n              className=\"close-modal-btn\"\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div>\n\n          <div id=\"lower-taskmodal-div\">\n            <form id=\"add-task-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"name\">Task:</label>\n              <input\n                name=\"name\"\n                type=\"text\"\n                className=\"modal-input\"\n                onChange={this.handleChange}\n                value={this.state.name}\n              />\n\n              <label htmlFor=\"description\">Description:</label>\n              <textarea\n                name=\"description\"\n                type=\"text\"\n                rows=\"4\"\n                className=\"modal-input\"\n                onChange={this.handleChange}\n                value={this.state.description}\n              />\n              <label htmlFor=\"points\">Points:</label>\n              <textarea\n                name=\"points\"\n                type=\"text\"\n                className=\"modal-input\"\n                onChange={this.handleChange}\n                value={this.state.points}\n              />\n            </form>\n\n            <div id=\"task-box-categories\">\n              <h3 id=\"cat-title\">Category</h3>\n              {categories\n                ? categories.map((category) => (\n                    <div key={category.id} className=\"each-cat-wrap\">\n                      <div\n                        id=\"cat-icon-wrap\"\n                        style={{ backgroundColor: category.color }}\n                      >\n                        <img src={category.imageUrl} className=\"cat-icon\"></img>\n                      </div>\n                      {category.name}\n                    </div>\n                  ))\n                : \"null\"}\n            </div>\n\n            {/* <div id=\"task-box-category\">\n              <h3 id=\"cat-title\">Category</h3>\n          {this.state.chosenGroup & this.state.chosenGroup.length > 0 ?\n          <Categories chosenGroup={this.state.chosenGroup}/> :\n           'null'}\n            </div> */}\n\n            <form id=\"group-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"selected\"></label>\n              <select\n                value={this.state.selected}\n                onChange={this.handleChange}\n                // onClick={this.cats}\n                name=\"selected\"\n              >\n                <option value=\"\" disabled>\n                  Select Group\n                </option>\n                {groups && groups.length\n                  ? groups.map((group) => (\n                      <option key={group.id}>{group.name} </option>\n                    ))\n                  : \"There are no groups\"}\n              </select>\n              <button type=\"submit\" id=\"modal-submit-button\">\n                Add\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  tasks: state.tasks,\n  groups: state.groups,\n});\n\nconst mapDispatch = (dispatch) => ({\n  addTask: (task) => dispatch(addTaskThunk(task)),\n  fetchTasks: (userId) => dispatch(fetchTasksThunk(userId)),\n  deleteTask: (taskId) => dispatch(removeTaskThunk(taskId)),\n});\n\nexport default connect(mapState, mapDispatch)(CreateTaskModal);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateTaskThunk } from \"../../store/tasks\";\nimport { fetchTasksThunk } from \"../../store/tasks\";\nimport \"./taskmodal.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nclass UpdateTaskModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.task.name,\n      selected: this.props.task.selected,\n      description: this.props.task.description,\n      taskId: this.props.task.id,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      if (this.state.name == \"\") {\n        alert(\"task name can't be empty!\");\n      } else {\n        await this.props.updateTask(this.state);\n        this.setState({\n          name: \"\",\n          selected: \"\",\n          description: \"\",\n        });\n        alert(`Your task was updated! Redirecting you to your tasks page..`);\n        this.props.onClose();\n      }\n    } catch (err) {\n      console.log(\"error creating task\", err);\n    }\n  }\n\n  onClose = (e) => {\n    this.props.onClose && this.props.onClose(e);\n  };\n\n  render() {\n    let { groups } = this.props.tasks;\n\n    if (!this.props.showTask || !this.props.selectedTask) {\n      return null;\n    }\n    return (\n      <div>\n        <div>{this.props.children}</div>\n        <div className=\"task-modal-content\">\n          <div id=\"top-taskmodal-div\">\n            <div id=\"modal-title\">YOUR TASK</div>\n            <button\n              onClick={(e) => this.onClose(e)}\n              className=\"close-modal-btn\"\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div>\n\n          <div id=\"lower-taskmodal-div\">\n            <form id=\"add-task-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"name\">Task:</label>\n              <input\n                name=\"name\"\n                type=\"text\"\n                className=\"modal-input\"\n                onChange={this.handleChange}\n                value={this.state.name}\n              />\n\n              <label htmlFor=\"description\">Description:</label>\n              <textarea\n                name=\"description\"\n                type=\"text\"\n                rows=\"4\"\n                className=\"modal-input\"\n                onChange={this.handleChange}\n                value={this.state.description}\n              />\n            </form>\n\n            <form id=\"group-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"selected\"></label>\n              <select\n                value={this.state.selected}\n                onChange={this.handleChange}\n                name=\"selected\"\n              >\n                <option value=\"\" disabled>\n                  Select Group\n                </option>\n                {groups && groups.length\n                  ? groups.map((group) => (\n                      <option key={group.id}>{group.name} </option>\n                    ))\n                  : \"There are no groups\"}\n              </select>\n              <button type=\"submit\" id=\"modal-submit-button\">\n                Update\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  tasks: state.tasks,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchTasks: (userId) => dispatch(fetchTasksThunk(userId)),\n  updateTask: (task) => dispatch(updateTaskThunk(task)),\n});\n\nexport default connect(mapState, mapDispatch)(UpdateTaskModal);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport CreateTaskModal from \"./CreateTaskModal\";\nimport UpdateTaskModal from \"./UpdateTaskModal\";\n\nimport { updateTaskCompletion } from \"../../store/singletask\";\nimport {\n  postCompletedPointsThunk,\n  removeCompletedPointsThunk,\n} from \"../../store/point\";\n\nimport \"./Tasks.css\";\nimport { fetchGroupsThunk } from \"../../store/allGroups\";\nimport { fetchTasksThunk, removeTaskThunk } from \"../../store/tasks\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCheckCircle } from \"@fortawesome/free-regular-svg-icons\";\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      showTask: false,\n    };\n    this.showModal = this.showModal.bind(this);\n    this.showTaskModal = this.showTaskModal.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchTasks();\n    this.props.fetchGroups();\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteTask(id);\n      this.props.fetchTasks();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async toggleCompleted(taskId, isCompleted) {\n    try {\n      if (isCompleted === false) {\n        await this.props.updateTaskCompletion(taskId, !isCompleted);\n        await this.props.postAwardedPoints(taskId);\n      } else {\n        await this.props.updateTaskCompletion(taskId, !isCompleted);\n        await this.props.removePoints(taskId);\n      }\n      this.props.fetchTasks();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  showModal(e) {\n    this.setState({ show: !this.state.show });\n  }\n\n  showTaskModal(e, taskId) {\n    this.setState({ taskId, showTask: !this.state.showTask });\n  }\n\n  render() {\n    let { tasks } = this.props.userTasks;\n\n    return (\n      <div className=\"task-wrapper\">\n        <div id=\"task-box\">\n          <div className=\"task-box-header\">My Tasks</div>\n          <div className=\"task-box-body\">\n            <div id=\"task-box-categories\">Category</div>\n\n            {/* LIST OF TASKS */}\n            <div id=\"task-box-list\">\n              {tasks && tasks.length\n                ? tasks.map((task) => (\n                    <div key={task.id} className=\"singletask\">\n                      <a onClick={(e) => this.showTaskModal(e, task.id)}>\n                        {\" \"}\n                        {task.name}\n                      </a>\n\n                      <UpdateTaskModal\n                        selectedTask={task.id === this.state.taskId}\n                        task={task}\n                        onClose={(e) => this.showTaskModal(e)}\n                        showTask={this.state.showTask}\n                      />\n\n                      <button\n                        onClick={() =>\n                          this.toggleCompleted(task.id, task.isCompleted)\n                        }\n                        className=\"group-completeTask\"\n                      >\n                        <div\n                          className={\n                            task.isCompleted\n                              ? \"check-circle complete\"\n                              : \"check-circle incomplete\"\n                          }\n                        >\n                          <FontAwesomeIcon icon={faCheckCircle} />\n                        </div>\n                      </button>\n                      <button\n                        onClick={() => this.handleDelete(task.id)}\n                        className=\"deleteTask\"\n                      >\n                        X\n                      </button>\n                    </div>\n                  ))\n                : \"You have no tasks\"}\n            </div>\n            <div id=\"just-another-layout-div\"></div>\n          </div>\n          <div id=\"add-button-div\">\n            <button\n              onClick={(e) => {\n                this.showModal(e);\n              }}\n              className=\"add-task-button\"\n            >\n              <div id=\"ahhh\">\n                <FontAwesomeIcon icon={faPlusSquare} />\n              </div>\n              Add New Task\n            </button>\n            <CreateTaskModal\n              onClose={(e) => this.showModal(e)}\n              show={this.state.show}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  userTasks: state.tasks,\n  userId: state.user.id,\n  groups: state.groups,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchTasks: () => dispatch(fetchTasksThunk()),\n  deleteTask: (taskId) => dispatch(removeTaskThunk(taskId)),\n  updateTaskCompletion: (taskId, isCompleted) =>\n    dispatch(updateTaskCompletion(taskId, isCompleted)),\n  postAwardedPoints: (taskId) => dispatch(postCompletedPointsThunk(taskId)),\n  removePoints: (taskId) => dispatch(removeCompletedPointsThunk(taskId)),\n  fetchGroups: () => dispatch(fetchGroupsThunk()),\n});\n\nexport default connect(mapState, mapDispatch)(TaskList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchSingleGroup, addGroupTaskThunk } from \"../../store/singleGroup\";\nimport \"./grouptaskmodal.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nclass GroupTaskModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      selected: \"\",\n      description: \"\",\n      points: 0,\n      groupId: this.props.groupId,\n      error: null,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchGroup(this.props.groupId);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      await this.props.addGroupTask(this.props.groupId, this.state);\n      this.setState({\n        name: \"\",\n        selected: \"\",\n        description: \"\",\n        points: 0,\n      });\n      await this.props.fetchGroup(this.props.groupId);\n      this.props.onClose();\n    } catch (err) {\n      console.log(\"error creating task\", err);\n    }\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteTask(id);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  onClose = (e) => {\n    this.props.onClose && this.props.onClose(e);\n  };\n\n  render() {\n    let group = this.props.group;\n\n    if (!this.props.show) {\n      return null;\n    }\n    return (\n      <div>\n        <div>{this.props.children}</div>\n        <div className=\"group-task-modal-content\">\n          <div id=\"group-top-taskmodal-div\">\n            <div id=\"group-modal-title\">NEW TASK</div>\n            <button\n              onClick={(e) => this.onClose(e)}\n              className=\"group-close-modal-btn\"\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div>\n\n          <div id=\"group-lower-taskmodal-div\">\n            <form id=\"group-add-task-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"name\">Task:</label>\n              <input\n                name=\"name\"\n                type=\"text\"\n                className=\"group-modal-input\"\n                onChange={this.handleChange}\n                value={this.state.name}\n              />\n\n              <label htmlFor=\"description\">Description:</label>\n              <textarea\n                name=\"description\"\n                type=\"text\"\n                rows=\"4\"\n                className=\"group-modal-input\"\n                onChange={this.handleChange}\n                value={this.state.description}\n              />\n              <label htmlFor=\"points\">Points:</label>\n              <textarea\n                name=\"points\"\n                type=\"text\"\n                className=\"modal-input\"\n                onChange={this.handleChange}\n                value={this.state.points}\n              />\n            </form>\n\n            <form id=\"user-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"selected\"></label>\n              <select\n                value={this.state.selected}\n                onChange={this.handleChange}\n                name=\"selected\"\n              >\n                <option value=\"\" disabled>\n                  Select User\n                </option>\n                {group && group.users\n                  ? group.users.map((user) => (\n                      <option key={user.id}>\n                        {user.firstName} {user.lastName}\n                      </option>\n                    ))\n                  : \"There are no users\"}\n              </select>\n              <button id=\"group-modal-submit-button\" type=\"submit\">\n                Add\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  userId: state.user.id,\n  group: state.singleGroup,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroup: (groupId) => dispatch(fetchSingleGroup(groupId)),\n  addGroupTask: (groupId, task) => dispatch(addGroupTaskThunk(groupId, task)),\n  updateTask: (task) => dispatch(updateSingleTask(task)),\n});\n\nexport default connect(mapState, mapDispatch)(GroupTaskModal);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { updateGroupTaskThunk, fetchTasksThunk } from \"../../store/tasks\";\nimport { fetchSingleGroupTasks } from \"../../store/singleGroup\";\n\nclass UpdateGroupTaskModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.task.name,\n      selected: this.props.task.selected,\n      description: this.props.task.description,\n      points: this.props.task.points,\n      taskId: this.props.task.id,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      if (this.state.name == \"\") {\n        alert(\"Task name can't be empty!\");\n      } else {\n        await this.props.updateGroupTask(this.state);\n        this.setState({\n          name: \"\",\n          selected: \"\",\n          description: \"\",\n        });\n        alert(`Task was updated! Redirecting you to the tasks page.`);\n        await this.props.fetchGroup(this.props.group.id);\n        this.props.onClose();\n      }\n    } catch (err) {\n      console.log(\"error creating task\", err);\n    }\n  }\n\n  onClose = (e) => {\n    this.props.onClose && this.props.onClose(e);\n  };\n\n  render() {\n    let group = this.props.group;\n\n    if (!this.props.showTask || !this.props.selectedTask) {\n      return null;\n    }\n    return (\n      <div>\n        <div>{this.props.children}</div>\n        <div className=\"group-task-modal-content\">\n          <div id=\"group-top-taskmodal-div\">\n            <div id=\"group-modal-title\">UPDATE TASK</div>\n            <button\n              onClick={(e) => this.onClose(e)}\n              className=\"group-close-modal-btn\"\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div>\n\n          <div id=\"group-lower-taskmodal-div\">\n            <form id=\"group-add-task-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"name\">Task:</label>\n              <input\n                name=\"name\"\n                type=\"text\"\n                className=\"group-modal-input\"\n                onChange={this.handleChange}\n                value={this.state.name}\n              />\n\n              <label htmlFor=\"description\">Description:</label>\n              <textarea\n                name=\"description\"\n                type=\"text\"\n                rows=\"4\"\n                className=\"group-modal-input\"\n                onChange={this.handleChange}\n                value={this.state.description}\n              />\n              <label htmlFor=\"points\">Points:</label>\n              <textarea\n                name=\"points\"\n                type=\"text\"\n                className=\"modal-input\"\n                onChange={this.handleChange}\n                value={this.state.points}\n              />\n            </form>\n\n            <form id=\"user-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"selected\"></label>\n              <select\n                value={this.state.selected}\n                onChange={this.handleChange}\n                name=\"selected\"\n              >\n                <option value=\"\" disabled>\n                  Select User\n                </option>\n                {group && group.users\n                  ? group.users.map((user) => (\n                      <option key={user.id}>\n                        {user.firstName} {user.lastName}\n                      </option>\n                    ))\n                  : \"There are no users\"}\n              </select>\n              <button id=\"group-modal-submit-button\" type=\"submit\">\n                Update\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  userId: state.user.id,\n  group: state.singleGroup,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroup: (groupId) => dispatch(fetchSingleGroupTasks(groupId)),\n  updateGroupTask: (task) => dispatch(updateGroupTaskThunk(task)),\n});\n\nexport default connect(mapState, mapDispatch)(UpdateGroupTaskModal);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport GroupTaskModal from \"./GroupTaskModal\";\nimport UpdateGroupTaskModal from \"./UpdateGroupTask\";\nimport { removeTaskThunk } from \"../../store/tasks\";\nimport { updateTaskCompletion } from \"../../store/singletask\";\nimport { fetchSingleGroupTasks } from \"../../store/singleGroup\";\nimport {\n  postCompletedPointsThunk,\n  removeCompletedPointsThunk,\n} from \"../../store/point\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCheckCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport \"./grouptasks.css\";\n\nclass GroupTaskList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.showTaskModal = this.showTaskModal.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchGroup(this.props.match.params.groupId);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteTask(id);\n      this.props.fetchGroup(this.props.match.params.groupId);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async toggleCompleted(taskId, isCompleted) {\n    try {\n      if (isCompleted === false) {\n        await this.props.updateTaskCompletion(taskId, !isCompleted);\n        await this.props.postAwardedPoints(taskId);\n      } else {\n        await this.props.updateTaskCompletion(taskId, !isCompleted);\n        await this.props.removePoints(taskId);\n      }\n      this.props.fetchGroup(this.props.match.params.groupId);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  showModal(e) {\n    this.setState({ show: !this.state.show });\n  }\n\n  showTaskModal(e, taskId) {\n    this.setState({ taskId, showTask: !this.state.showTask });\n  }\n\n  render() {\n    let tasks = this.props.group.tasks;\n    let group = this.props.group;\n    let categories = this.props.group.categories;\n\n    return (\n      <div className=\"group-task-wrapper\">\n        <div id=\"group-task-box\">\n          <div className=\"group-task-box-header\">Tasks -- {group.name}</div>\n          <div className=\"group-task-box-body\">\n            <div id=\"group-task-box-categories\">\n              <h3 id=\"category-title\">Category</h3>\n              <div className=\"each-category-wrap\">All</div>\n\n              {categories\n                ? categories.map((category) => (\n                    <div key={category.id} className=\"each-category-wrap\">\n                      <div\n                        id=\"category-icon-wrap\"\n                        style={{ backgroundColor: category.color }}\n                      >\n                        <img\n                          src={category.imageUrl}\n                          className=\"category-icon\"\n                        ></img>\n                      </div>\n                      {category.name}\n                    </div>\n                  ))\n                : \"null\"}\n            </div>\n            {/* LIST OF TASKS */}\n            <div id=\"group-task-box-list\">\n              {tasks && tasks.length\n                ? tasks.map((task) => (\n                    <div key={task.id} className=\"group-singletask\">\n                      <a onClick={(e) => this.showTaskModal(e, task.id)}>\n                        {\" \"}\n                        {task.name}\n                      </a>\n\n                      <UpdateGroupTaskModal\n                        selectedTask={task.id === this.state.taskId}\n                        task={task}\n                        onClose={(e) => this.showTaskModal(e)}\n                        showTask={this.state.showTask}\n                        groupId={this.props.match.params.groupId}\n                      />\n\n                      <button\n                        onClick={() =>\n                          this.toggleCompleted(task.id, task.isCompleted)\n                        }\n                        className=\"group-completeTask\"\n                      >\n                        <div\n                          className={\n                            task.isCompleted\n                              ? \"check-circle complete\"\n                              : \"check-circle incomplete\"\n                          }\n                        >\n                          <FontAwesomeIcon icon={faCheckCircle} />\n                        </div>\n                      </button>\n\n                      <div>---worth {task.Task_Group.points} POINTS</div>\n\n                      <button\n                        onClick={() => this.handleDelete(task.id)}\n                        className=\"group-deleteTask\"\n                      >\n                        X\n                      </button>\n                    </div>\n                  ))\n                : \"Your group has no tasks\"}\n            </div>\n            <div id=\"group-just-another-layout-div\"></div>\n          </div>\n          <div id=\"group-add-button-div\">\n            <button\n              onClick={(e) => {\n                this.showModal(e);\n              }}\n              className=\"group-add-task-button\"\n            >\n              <div id=\"ahhh\">\n                <FontAwesomeIcon icon={faPlusSquare} />\n              </div>\n              Add New Task\n            </button>\n            <GroupTaskModal\n              groupId={this.props.match.params.groupId}\n              onClose={(e) => this.showModal(e)}\n              show={this.state.show}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  // tasks: state.tasks,\n  userId: state.user.id,\n  group: state.singleGroup,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroup: (groupId) => dispatch(fetchSingleGroupTasks(groupId)),\n  deleteTask: (taskId) => dispatch(removeTaskThunk(taskId)),\n  updateTaskCompletion: (taskId, isCompleted) =>\n    dispatch(updateTaskCompletion(taskId, isCompleted)),\n  postAwardedPoints: (taskId) => dispatch(postCompletedPointsThunk(taskId)),\n  removePoints: (taskId) => dispatch(removeCompletedPointsThunk(taskId)),\n});\n\nexport default connect(mapState, mapDispatch)(GroupTaskList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchShoppingItemsThunk,\n  addShoppingItemThunk,\n  removeTaskThunk,\n} from \"../../store/tasks\";\nimport \"./taskmodal.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nclass ShoppingModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      selected: \"\",\n      description: \"\",\n      error: null,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      await this.props.addItem(this.state);\n      await this.props.fetchItems();\n      this.setState({\n        name: \"\",\n        selected: \"\",\n      });\n      this.props.onClose();\n    } catch (err) {\n      console.log(\"error creating item\", err);\n    }\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteItem(id);\n      this.props.fetchItems();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  onClose = (e) => {\n    this.props.onClose && this.props.onClose(e);\n  };\n\n  render() {\n    let { groups } = this.props.tasks;\n\n    if (!this.props.show) {\n      return null;\n    }\n    return (\n      <div>\n        <div>{this.props.children}</div>\n        <div className=\"task-modal-content\">\n          <div id=\"top-taskmodal-div\">\n            <div id=\"modal-title\">NEW ITEM</div>\n            <button\n              onClick={(e) => this.onClose(e)}\n              className=\"close-modal-btn\"\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div>\n\n          <div id=\"lower-taskmodal-div\">\n            <form id=\"add-task-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"name\">Item:</label>\n              <input\n                name=\"name\"\n                type=\"text\"\n                className=\"modal-input\"\n                onChange={this.handleChange}\n                value={this.state.name}\n              />\n\n              <label htmlFor=\"description\">Description:</label>\n              <textarea\n                name=\"description\"\n                type=\"text\"\n                rows=\"4\"\n                className=\"modal-input\"\n                onChange={this.handleChange}\n                value={this.state.description}\n              />\n            </form>\n\n            <form id=\"group-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"selected\"></label>\n              <select\n                value={this.state.selected}\n                onChange={this.handleChange}\n                name=\"selected\"\n              >\n                <option value=\"\" disabled>\n                  Select Group\n                </option>\n                {groups && groups.length\n                  ? groups.map((group) => (\n                      <option key={group.id}>{group.name} </option>\n                    ))\n                  : \"There are no groups\"}\n              </select>\n              <button type=\"submit\" id=\"modal-submit-button\">\n                Add\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  tasks: state.tasks,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchItems: (userId) => dispatch(fetchShoppingItemsThunk(userId)),\n  deleteItem: (taskId) => dispatch(removeTaskThunk(taskId)),\n  addItem: (task) => dispatch(addShoppingItemThunk(task)),\n});\n\nexport default connect(mapState, mapDispatch)(ShoppingModal);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateTaskCompletion } from \"../../store/singletask\";\nimport ShoppingModal from \"./ShoppingModal\";\nimport \"./Tasks.css\";\nimport { fetchShoppingItemsThunk, removeTaskThunk } from \"../../store/tasks\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCheckCircle } from \"@fortawesome/free-regular-svg-icons\";\n\nclass ShoppingList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n    this.showModal = this.showModal.bind(this);\n  }\n  componentDidMount() {\n    this.props.fetchItems();\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteItem(id);\n      this.props.fetchItems();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async toggleCompleted(taskId, isCompleted) {\n    try {\n      await this.props.updateTaskCompletion(taskId, !isCompleted);\n\n      this.props.fetchItems();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  showModal(e) {\n    this.setState({ show: !this.state.show });\n  }\n\n  render() {\n    let { tasks, groups } = this.props.tasks;\n\n    return (\n      <div className=\"task-wrapper\">\n        <div id=\"task-box\">\n          <div className=\"task-box-header\">\n            Shopping List\n            {/* <select name=\"selected\">\n          <option value=\"\" disabled>\n            Select Group\n          </option>\n          {groups && groups.length\n            ? groups.map((group) => (\n                <option key={group.id}>{group.name} </option>\n              ))\n            : \"There are no groups\"}\n        </select> */}\n          </div>\n          <div className=\"task-box-body\">\n            <div id=\"task-box-categories\">Category</div>\n\n            {/* LIST OF TASKS */}\n            <div id=\"task-box-list\">\n              {tasks && tasks.length\n                ? tasks.map((task) => (\n                    <p key={task.id} className=\"singletask\">\n                      <button\n                        onClick={() =>\n                          this.toggleCompleted(task.id, task.isCompleted)\n                        }\n                        className=\"group-completeTask\"\n                      >\n                        <div\n                          className={\n                            task.isCompleted\n                              ? \"check-circle complete\"\n                              : \"check-circle incomplete\"\n                          }\n                        >\n                          <FontAwesomeIcon icon={faCheckCircle} />\n                        </div>\n                      </button>\n                      {task.name}\n                      <button\n                        onClick={() => this.handleDelete(task.id)}\n                        className=\"deleteTask\"\n                      >\n                        X\n                      </button>\n                    </p>\n                  ))\n                : \"You have no items in your shopping list!\"}\n            </div>\n            <div id=\"just-another-layout-div\"></div>\n          </div>\n          <div id=\"add-button-div\">\n            <button\n              onClick={(e) => {\n                this.showModal(e);\n              }}\n              className=\"add-task-button\"\n            >\n              <div id=\"ahhh\">\n                <FontAwesomeIcon icon={faPlusSquare} />\n              </div>\n              Add Item\n            </button>\n            <ShoppingModal\n              onClose={(e) => this.showModal(e)}\n              show={this.state.show}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  tasks: state.tasks,\n  userId: state.user.id,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchItems: () => dispatch(fetchShoppingItemsThunk()),\n  deleteItem: (taskId) => dispatch(removeTaskThunk(taskId)),\n  updateTaskCompletion: (taskId, isCompleted) =>\n    dispatch(updateTaskCompletion(taskId, isCompleted)),\n});\n\nexport default connect(mapState, mapDispatch)(ShoppingList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchSingleGroupShopping,\n  addGroupItemThunk,\n} from \"../../store/singleGroup\";\nimport \"./grouptaskmodal.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nclass GroupShoppingModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      selected: \"\",\n      description: \"\",\n      groupId: this.props.groupId,\n      error: null,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchGroup(this.props.groupId);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      await this.props.addGroupTask(this.props.groupId, this.state);\n      this.setState({\n        name: \"\",\n        selected: \"\",\n      });\n      await this.props.fetchGroup(this.props.groupId);\n      this.props.onClose();\n    } catch (err) {\n      console.log(\"error creating task\", err);\n    }\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteTask(id);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  onClose = (e) => {\n    this.props.onClose && this.props.onClose(e);\n  };\n\n  render() {\n    let group = this.props.group;\n\n    if (!this.props.show) {\n      return null;\n    }\n    return (\n      <div>\n        <div>{this.props.children}</div>\n        <div className=\"group-task-modal-content\">\n          <div id=\"group-top-taskmodal-div\">\n            <div id=\"group-modal-title\">NEW ITEM</div>\n            <button\n              onClick={(e) => this.onClose(e)}\n              className=\"group-close-modal-btn\"\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div>\n\n          <div id=\"group-lower-taskmodal-div\">\n            <form id=\"group-add-task-form\" onSubmit={this.handleSubmit}>\n              <label htmlFor=\"name\">Name:</label>\n              <input\n                name=\"name\"\n                type=\"text\"\n                className=\"group-modal-input\"\n                onChange={this.handleChange}\n                value={this.state.name}\n              />\n\n              <label htmlFor=\"description\">Description:</label>\n              <textarea\n                name=\"description\"\n                type=\"text\"\n                rows=\"4\"\n                className=\"group-modal-input\"\n                onChange={this.handleChange}\n                value={this.state.description}\n              />\n              <button id=\"group-modal-submit-button\" type=\"submit\">\n                Add\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  userId: state.user.id,\n  group: state.singleGroup,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroup: (groupId) => dispatch(fetchSingleGroupShopping(groupId)),\n  addGroupTask: (groupId, task) => dispatch(addGroupItemThunk(groupId, task)),\n  updateTask: (task) => dispatch(updateSingleTask(task)),\n});\n\nexport default connect(mapState, mapDispatch)(GroupShoppingModal);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport GroupShoppingModal from \"./GroupShoppingModal\";\nimport { removeTaskThunk } from \"../../store/tasks\";\nimport { updateTaskCompletion } from \"../../store/singletask\";\nimport { fetchSingleGroupShopping } from \"../../store/singleGroup\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { faCheckCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport \"./grouptasks.css\";\n\nclass GroupShoppingList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.showModal = this.showModal.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchGroup(this.props.match.params.groupId);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteTask(id);\n      this.props.fetchGroup(this.props.match.params.groupId);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async toggleCompleted(taskId, isCompleted) {\n    try {\n      await this.props.updateTaskCompletion(taskId, !isCompleted);\n\n      this.props.fetchGroup(this.props.match.params.groupId);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  showModal(e) {\n    this.setState({ show: !this.state.show });\n  }\n\n  render() {\n    let tasks = this.props.group.tasks;\n    let group = this.props.group;\n    let categories = this.props.group.categories;\n\n    return (\n      <div className=\"group-task-wrapper\">\n        <div id=\"group-task-box\">\n          <div className=\"group-task-box-header\">\n            Shopping List - {group.name}\n          </div>\n          <div className=\"group-task-box-body\">\n            <div id=\"group-task-box-categories\">\n              Category\n              {categories\n                ? categories.map((category) => (\n                    <div key={category.id} className=\"each-category-wrap\">\n                      <div\n                        id=\"category-icon-wrap\"\n                        style={{ backgroundColor: category.color }}\n                      >\n                        <img\n                          src={category.imageUrl}\n                          className=\"category-icon\"\n                        ></img>\n                      </div>\n                      {category.name}\n                    </div>\n                  ))\n                : \"null\"}\n            </div>\n\n            {/* LIST OF TASKS */}\n            <div id=\"group-task-box-list\">\n              {tasks && tasks.length\n                ? tasks.map((task) => (\n                    <div key={task.id} className=\"group-singletask\">\n                      <button\n                        onClick={() =>\n                          this.toggleCompleted(task.id, task.isCompleted)\n                        }\n                        className=\"group-completeTask\"\n                      >\n                        <div\n                          className={\n                            task.isCompleted\n                              ? \"check-circle complete\"\n                              : \"check-circle incomplete\"\n                          }\n                        >\n                          <FontAwesomeIcon icon={faCheckCircle} />\n                        </div>\n                      </button>\n                      {task.name}\n                      <button\n                        onClick={() => this.handleDelete(task.id)}\n                        className=\"group-deleteTask\"\n                      >\n                        X\n                      </button>\n                    </div>\n                  ))\n                : \"This shopping list has no items!\"}\n            </div>\n            <div id=\"group-just-another-layout-div\"></div>\n          </div>\n          <div id=\"group-add-button-div\">\n            <button\n              onClick={(e) => {\n                this.showModal(e);\n              }}\n              className=\"group-add-task-button\"\n            >\n              <div id=\"ahhh\">\n                <FontAwesomeIcon icon={faPlusSquare} />\n              </div>\n              Add Item\n            </button>\n            <GroupShoppingModal\n              groupId={this.props.match.params.groupId}\n              onClose={(e) => this.showModal(e)}\n              show={this.state.show}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  tasks: state.tasks,\n  userId: state.user.id,\n  group: state.singleGroup,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroup: (groupId) => dispatch(fetchSingleGroupShopping(groupId)),\n  deleteTask: (taskId) => dispatch(removeTaskThunk(taskId)),\n  updateTaskCompletion: (taskId, isCompleted) =>\n    dispatch(updateTaskCompletion(taskId, isCompleted)),\n});\n\nexport default connect(mapState, mapDispatch)(GroupShoppingList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateGroupThunk } from \"../../store/singleGroup\";\nimport { Link } from \"react-router-dom\";\n\nimport { fetchGroupsThunk, removeGroupThunk } from \"../../store/allGroups\";\n\nclass GroupList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    this.props.fetchGroups(this.props.match.params.userId);\n  }\n\n  async handleDelete(id) {\n    try {\n      await this.props.deleteGroup(id);\n      this.props.fetchGroups();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  render() {\n    let { groups } = this.props;\n    return (\n      <div className=\"group-wrapper\">\n        <h1 className=\"tool-title\">My Groups</h1>\n        <Link to=\"/groups/create\">Create a Group</Link>\n        {!groups.length ? (\n          \"You are not a part of any groups.\"\n        ) : (\n          <div id=\"group-box\">\n            {groups.map((group) => (\n              <div key={group.id} className=\"singlegroup\">\n                <Link to={`/groups/${group.id}`}>\n                  <img src={group.imageUrl}></img>\n                  {group.name}\n                </Link>\n                <button\n                  onClick={() => this.handleDelete(group.id)}\n                  className=\"deletegroup\"\n                >\n                  X\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  groups: state.groups,\n  userId: state.user.id,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroups: (userId) => dispatch(fetchGroupsThunk(userId)),\n  deleteGroup: (groupId) => dispatch(removeGroupThunk(groupId)),\n  updateGroup: (group) => dispatch(updateGroupThunk(group)),\n});\n\nexport default connect(mapState, mapDispatch)(GroupList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { addGroupThunk } from \"../../store/allGroups\";\n\nclass CreateGroup extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: \"\",\n      description: \"\",\n      redirectTo: null,\n      // showError: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  //clears boxes after submit\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      await this.props.addGroup(this.state);\n      if (this.state.name === \"\") {\n        alert(\"group name can't be empty!\");\n      }\n      this.setState({\n        redirectTo: \"/groups\",\n      });\n      alert(\n        `Your group \"${this.state.name}\" was created! Redirecting you to your groups page..`\n      );\n    } catch (err) {\n      console.log(\"error creating group\", err);\n    }\n  }\n\n  render() {\n    if (this.state.redirectTo) {\n      return <Redirect to={{ pathname: this.state.redirectTo }} />;\n    } else {\n      return (\n        <div className=\"group-wrapper\">\n          <h1>Create Group</h1>\n\n          <form id=\"add-group-form\" onSubmit={this.handleSubmit}>\n            <label htmlFor=\"name\">Name:</label>\n            <input\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Your new group's name\"\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n            <label htmlFor=\"name\">Description:</label>\n            <input\n              name=\"description\"\n              type=\"textarea\"\n              placeholder=\"Write a description\"\n              onChange={this.handleChange}\n              value={this.state.description}\n            />\n            <button type=\"submit\">Add</button>\n          </form>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapDispatch = (dispatch) => ({\n  addGroup: (group) => dispatch(addGroupThunk(group)),\n});\n\nexport default connect(null, mapDispatch)(CreateGroup);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateGroupThunk, fetchSingleGroup } from \"../../store/singleGroup\";\nimport { Link } from \"react-router-dom\";\nimport { addToGroupThunk, deleteFromGroupThunk } from \"../../store/singleGroup\";\nimport \"./singlegroup.css\";\n\nclass SingleGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchGroup(this.props.match.params.groupId);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      await this.props.addUser(this.props.group.id, this.state.userId);\n      this.props.fetchGroup(this.props.match.params.groupId);\n    } catch (err) {\n      console.log(\"handlesubmit err\", err);\n    }\n  }\n\n  render() {\n    const group = this.props.group;\n\n    return (\n      <div key={group.id} id=\"group-info\">\n        Edit group\n        <form id=\"addform\" onSubmit={this.handleSubmit}>\n          <h3>Add a User</h3>\n          <label htmlFor=\"userId\">id</label>\n          <input\n            name=\"userId\"\n            type=\"text\"\n            onChange={this.handleChange}\n            value={this.props.userId}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <h1 className=\"tool-title\">Group: {group.name}</h1>\n        <img src={group.imageUrl}></img>\n        <h3>Description: {group.description}</h3>\n        <ul>\n          <li>\n            <Link to={`/groups/${this.props.group.id}/tasks`}>Group Tasks</Link>\n          </li>\n          <li>\n            {\" \"}\n            <Link to={`/groups/${this.props.group.id}/shoppinglist`}>\n              Shopping\n            </Link>\n          </li>\n          <li>\n            <Link to={`/groups/${this.props.group.id}/rewards`}>Rewards</Link>\n          </li>\n        </ul>\n        Users:\n        {group.users ? (\n          <div>\n            {group.users.map((user) => (\n              <div key={user.id}>\n                <img src={user.avatarUrl} className=\"user-avatar\" />\n                {(() => {\n                  if (user.User_Group.role === \"admin\") {\n                    return (\n                      <h3>\n                        {user.firstName} {user.lastName} 🏅\n                      </h3>\n                    );\n                  } else {\n                    return (\n                      <h3>\n                        {user.firstName} {user.lastName}\n                      </h3>\n                    );\n                  }\n                })()}\n              </div>\n            ))}\n          </div>\n        ) : (\n          \"This group has no members.\"\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  group: state.singleGroup,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroup: (group) => dispatch(fetchSingleGroup(group)),\n  updateGroup: (group) => dispatch(updateGroupThunk(group)),\n  addUser: (groupId, userId) => dispatch(addToGroupThunk(groupId, userId)),\n});\n\nexport default connect(mapState, mapDispatch)(SingleGroup);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchSingleGroup } from \"../../store/singleGroup\";\nimport {\n  fetchUserPointsThunk,\n  fetchGroupPointsThunk,\n  fetchUserGroupPointsThunk,\n} from \"../../store/point\";\nimport \"./grouprewards.css\";\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from \"victory\";\n\nclass GroupRewards extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: \"\",\n      points: \"\",\n    };\n  }\n  async componentDidMount() {\n    this.props.fetchGroup(this.props.match.params.groupId);\n    // this.props.fetchUserPoints(this.props.userId);\n    await this.props.fetchGroupPoints(this.props.match.params.groupId);\n    // this.props.fetchUserGroupPoints(\n    //   this.props.userId,\n    //   this.props.match.params.groupId\n    // );\n  }\n\n  pointCalc(points, userId) {\n    return points\n      .filter((user) => user.userId === userId)\n      .reduce((accum, point) => {\n        return accum + point.value;\n      }, 0);\n  }\n\n  render() {\n    const group = this.props.group;\n    const points = this.props.points;\n\n    return (\n      <div className=\"group-reward-wrapper\">\n        <h1>Number of Points</h1>\n        {points ? (\n          group.users ? (\n            <div id=\"group-reward-user-wrap\">\n              {group.users.map((user) => (\n                <div key={user.id} id=\"group-reward-user\">\n                  <img src={user.avatarUrl} className=\"group-user-icon\" />\n                  {user.firstName}:{\" \"}\n                  {points.length > 0 ? this.pointCalc(points, user.id) : 0}{\" \"}\n                  points\n                </div>\n              ))}\n\n              <h3>Group Stats</h3>\n              <VictoryChart domainPadding={20} theme={VictoryTheme.material}>\n                <VictoryAxis\n                  tickValues={this.props.points.map((user) => user.firstName)}\n                />\n                <VictoryAxis dependentAxis tickFormat={(x) => `${x / 1}`} />\n                <VictoryBar\n                  data={this.props.points}\n                  x={\"firstName\"}\n                  y={\"value\"}\n                  style={{ data: { fill: \"#ff7290\" } }}\n                />\n              </VictoryChart>\n            </div>\n          ) : (\n            \"This group has no members.\"\n          )\n        ) : (\n          <h1>Loading...</h1>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  userId: state.user.id,\n  group: state.singleGroup,\n  tasks: state.tasks,\n  points: state.points,\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchGroup: (groupId) => dispatch(fetchSingleGroup(groupId)),\n  fetchUserPoints: (userId) => dispatch(fetchUserPointsThunk(userId)),\n  fetchGroupPoints: (groupId) => dispatch(fetchGroupPointsThunk(groupId)),\n  fetchUserGroupPoints: (userId, groupId) =>\n    dispatch(fetchUserGroupPointsThunk(userId, groupId)),\n});\n\nexport default connect(mapState, mapDispatch)(GroupRewards);\n","import React from \"react\";\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from \"victory\";\nimport { connect } from \"react-redux\";\nimport { fetchSingleGroup } from \"../../store/singleGroup\";\nimport { fetchUserPointsThunk } from \"../../store/point\";\n\nconst data = [\n  { task: 1, points: 130 },\n  { task: 2, points: 16 },\n  { task: 1, points: 142 },\n  { task: 4, points: 19 },\n];\n//write a formula for data\n//write a formula for custom tasks\nclass MyStats extends React.Component {\n  componentDidMount() {\n    this.props.fetchUserPoints(this.props.user.id);\n  }\n  convertData(points) {\n    points;\n  }\n  render() {\n    console.log(this.props, \"this.props in the mystats render\");\n    const newData = this.props.points;\n    // return (\n    //   <div>\n    //     <h1>My Stats</h1>\n    //     <VictoryChart domainPadding={10} theme={VictoryTheme.material}>\n    //       <VictoryAxis\n    //         tickValues={[\n    //           \"Home\",\n    //           \"Work\",\n    //           \"Finance\",\n    //           \"School\",\n    //           \"Family\",\n    //           \"Grocery\",\n    //           \"Home\",\n    //         ]}\n    //       />\n    //       <VictoryAxis dependentAxis tickFormat={(x) => `${x / 1}`} />\n    //       <VictoryBar data={newData} x={\"taskId\"} y={\"value\"} />\n    //     </VictoryChart>\n    //   </div>\n    // );\n    return (\n      <div>\n        <h1>My Stats</h1>\n        <VictoryChart domainPadding={10} theme={VictoryTheme.material}>\n          <VictoryAxis tickValues={[\"school\", \"work\", \"housework\", \"hobby\"]} />\n          <VictoryAxis dependentAxis tickFormat={(x) => `${x / 1}`} />\n          <VictoryBar data={data} x={\"task\"} y={\"points\"} />\n        </VictoryChart>\n      </div>\n    );\n  }\n}\nconst mapState = (state) => ({\n  user: state.user,\n  points: state.points,\n});\nconst mapDispatch = (dispatch) => ({\n  fetchUserPoints: (userId) => dispatch(fetchUserPointsThunk(userId)),\n});\nexport default connect(mapState, mapDispatch)(MyStats);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Route, Switch } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  UserHome,\n  HomePage,\n  Login,\n  Signup,\n  GroupList,\n  Account,\n  AccountSettings,\n  ShoppingList,\n  // AppCalendar,\n  TaskList,\n  CreateGroup,\n  SingleGroup,\n  GroupShoppingList,\n  GroupTaskList,\n  MyStats,\n  GroupRewards,\n} from \"./components\";\nimport { me } from \"./store\";\n\nclass Routes extends Component {\n  componentDidMount() {\n    this.props.loadInitialData();\n  }\n\n  render() {\n    const { isLoggedIn } = this.props;\n    return (\n      <Switch>\n        {/* Routes placed here are available to all visitors */}\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route exact path=\"/welcome\" component={HomePage} />\n        {isLoggedIn && (\n          <Switch>\n            {/* Routes placed here are only available after logging in */}\n\n            <Route exact path={[\"/home\", \"/\"]} component={UserHome} />\n            <Route exact path=\"/account\" component={Account} />\n            <Route exact path=\"/account/settings\" component={AccountSettings} />\n            {/* <Route path=\"/calendar\" component={AppCalendar} /> */}\n            <Route exact path=\"/tasks\" component={TaskList} />\n            <Route exact path=\"/groups\" component={GroupList} />\n            <Route path=\"/shoppinglist\" component={ShoppingList} />\n            <Route\n              exact\n              path=\"/:groupId/shoppinglist\"\n              component={GroupShoppingList}\n            />\n            <Route exact path=\"/groups/create\" component={CreateGroup} />\n            <Route exact path=\"/groups/:groupId\" component={SingleGroup} />\n            <Route\n              exact\n              path=\"/groups/:groupId/rewards\"\n              component={GroupRewards}\n            />\n\n            <Route\n              exact\n              path=\"/groups/:groupId/tasks\"\n              component={GroupTaskList}\n            />\n\n            <Route\n              path=\"/groups/:groupId/shoppinglist\"\n              component={GroupShoppingList}\n            />\n            <Route exact path=\"/mystats\" component={MyStats} />\n          </Switch>\n        )}\n        {/* Displays our Login component as a fallback */}\n        <Route component={HomePage} />\n      </Switch>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    isLoggedIn: !!state.user.id,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    loadInitialData() {\n      dispatch(me());\n    },\n  };\n};\n\n// The `withRouter` wrapper makes sure that updates are not blocked\n// when the url changes\nexport default withRouter(connect(mapState, mapDispatch)(Routes));\n\nRoutes.propTypes = {\n  loadInitialData: PropTypes.func.isRequired,\n  isLoggedIn: PropTypes.bool.isRequired,\n};\n","import React from \"react\";\nimport {TopNav, SideNav} from \"./components\";\nimport Routes from \"./routes\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sideNavOpen: false,\n    };\n    this.toggleSideNav = this.toggleSideNav.bind(this);\n  }\n  toggleSideNav() {\n    this.setState({ sideNavOpen: !this.state.sideNavOpen });\n  }\n  render() {\n    return (\n      <div className=\"app-wrap\">\n        {this.props.isLoggedIn ? (\n          <div id=\"topnav\">\n            <TopNav\n              toggleSideNav={this.toggleSideNav}\n              sideNavOpen={this.state.sideNavOpen}\n            />\n          </div>\n        ) : null}\n\n        <div id=\"sitebody\">\n          <div\n            className={`sidenav ${\n              this.state.sideNavOpen && this.props.isLoggedIn\n                ? \"open\"\n                : \"closed\"\n            }`}\n          >\n            <div id=\"open-close\" onClick={this.toggleSideNav}>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n            <SideNav\n              toggleSideNav={this.toggleSideNav}\n              sideNavOpen={this.state.sideNavOpen}\n            />\n          </div>\n          <div id=\"app-content-wrap\">\n            <Routes />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    isLoggedIn: !!state.user.id,\n  };\n};\n\nexport default connect(mapState, null)(App);\n\nApp.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport history from \"./history\";\nimport store from \"./store\";\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"app\")\n);\n\n// serviceWorkerRegistration.register();\n"],"sourceRoot":""}